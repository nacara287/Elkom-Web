@model And.ElkomMuhasebe.UI.WEB.Controllers.FATURAController.modelimiz

@{
    if (Model.FATURA.TIP == 1)
    {
        ViewBag.Title = "Alış Faturası Kartı";
      
    }
    else { ViewBag.Title = "Satış Faturası Kartı"; }
    Layout = "~/Views/Shared/yeni.cshtml";
}

<!-- Fiş bilgileri -->
<div class="card">
    <div class="card-body p-3">
        <div class="form-row">
            <div class="form-group col-md-2">
                <label>Cari Bilgileri</label>
                <input id="CariKodu" class="form-control form-control-sm" readonly data-hiddenvalue="@Model.FATURA.CARI.ID" value="@Model.FATURA.CARI.CARIKOD/@Model.FATURA.CARI.FIRMAUNVANI">

            </div>
            <div class="form-group col-md-2">
                <label>Fatura Numarası</label>
                <input id="FisNo" type="text" class="form-control form-control-sm" placeholder="Fiş Numarası" readonly required="" value="@Model.FATURA.FATNO">
            </div>
            <div class="form-group col-md-2">
                <label>Fatura Tarihi</label>
                <input id="Tarih" type="datetime-local" class="form-control form-control-sm" value="@Model.FATURA.TARIH.Value.Year.ToString("D" + 4)-@Model.FATURA.TARIH.Value.Month.ToString("D" + 2)-@Model.FATURA.TARIH.Value.Day.ToString("D" + 2)@Html.Raw("T")@Model.FATURA.TARIH.Value.Hour.ToString("D" + 2):@Model.FATURA.TARIH.Value.Minute.ToString("D" + 2)">
            </div>
            <div class="form-group col-md-2">
                <label>Ödeme Tarihi</label>
                <input id="ÖdemeTarihi" type="date" class="form-control form-control-sm" value="@Model.FATURA.ODEMETARIHI.Value.Year.ToString("D" + 4)-@Model.FATURA.ODEMETARIHI.Value.Month.ToString("D" + 2)-@Model.FATURA.ODEMETARIHI.Value.Day.ToString("D" + 2)">
            </div>
            <div class="form-group col-md-2">
                <label>Sorumluluk Merkezi</label>
                <select id="Smerkezi" class="form-control form-control-sm">
                    @{ if (Model.sORUMLULUK_MERKEZIs != null)
                        {
                            foreach (var item in Model.sORUMLULUK_MERKEZIs)
                            {
                                if (item.ID == (int)Model.FATURA.S_MERKEZIID)
                                {
                                    <option selected>@item.ACIKLAMA</option>

                                }
                                <option>@item.ACIKLAMA</option>
                            }
                        }
                    }
                </select>
            </div>
            <div class="form-group col-md-2">
                <label>Fatura Notu</label>
                <input id="Not" type="text" class="form-control form-control-sm" placeholder="Not" value="@Model.FATURA.ACIKLAMA">
            </div>
            <div class="form-group">
                <label>Stok Kdv Durumu</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="kdvdahil">
                    <label class="form-check-label" for="kdvdahil">
                        Stok Kdv Dahil
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="flexRadioDefault" id="kdvdahildegil" checked>
                    <label class="form-check-label" for="kdvdahildegil">
                        Stok Kdv Dahil Değil
                    </label>
                </div>

            </div>
        </div>
        <!-- Liste -->
        <button type="button" class="btn btn-sm btn-success btn-icon-split mr-1 " data-toggle="modal" data-target="#ModalİrsaliyeSec">İrsaliyeden Aktar</button>
        <button type="button" class="btn btn-sm btn-success btn-icon-split mr-1 " data-toggle="modal" data-target="#ModalSiparisSec">Siparişden Aktar</button>
        <button type="button" class="btn btn-sm btn-success btn-icon-split mr-1 " data-toggle="modal" data-target="#ModalStokFisSec">Stok Fişinden Aktar</button>
        <div class="table-responsive">
            <table id="bootstrap-table" class="table">
                <thead>
                    <tr>

                        <th data-field="STOKADI" data-sortable="true">Stok Kodu</th>

                         <th data-field="ACIKLAMA" data-sortable="true">Açıklama<a class="no-print" style="color:transparent;">-----------------------------------------</a></th>
                        <th data-field="MIKTAR" data-sortable="true">Mıktar</th>
                        <th data-field="BIRIM" data-sortable="true">BİRİM</th>
                        <th data-field="TUTAR" data-sortable="true" data-footer-formatter="priceFormatter">FİYAT</th>
                        <th data-field="ISKONTO" data-sortable="true">İskonto%</th>
                        <th data-field="PARABIRIMI" data-sortable="true">PARA BIRIMI</th>
                        <th data-field="PARABIRIMIKUR" data-sortable="true">PARA KURU</th>
                        <th data-field="NETTUTAR" data-sortable="true">TUTAR</th>
                        <th data-field="KDVTUTAR" data-sortable="true">KDV TUTAR</th>
                        <th width="8%&qucot;"></th>
                        <th data-field="REFERANS" data-sortable="true">Referans No</th>
                        <th data-field="REFERANS" data-visible="false" data-sortable="true">ID</th>
                    </tr>
                    <tr>

                        <td>
                            <input type="text" readonly class="form-control form-control-sm" onclick="stoklistele()" data-toggle="modal" data-target="#ModalStokSec" name="Stok" id="Stok" placeholder="StokAdı" onchange="tutargetir()">

                        </td>

                        <td>
                            <input type="text" class="form-control form-control-sm" value="Açıklama" id="Açıklama" onchange="tutargetir()">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" name="Mıktar" id="Mıktar" value="0" onchange="tutargetir()">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" name="Birim" id="Birim" value="" readonly onchange="tutargetir()">

                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm text-right" value="0.00" name="Tutar" id="Tutar" onchange="tutargetir()" placeholder="Fiyat" required="">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm text-right" value="0" name="iskonto" id="iskonto" onchange="tutargetir()" placeholder="%.." required="">
                        </td>
                        <td>
                            <select class="custom-select custom-select-sm" name="ParaBirimi" id="ParaBirimi" onchange="kurgetir(),tutargetir()">


                                @{ if (Model.KUR_BASLIKa != null)
                                    {
                                        <option value="1">TRY</option>
                                        foreach (var item in Model.KUR_BASLIKa)
                                        {
                                            <option value="@item.KUR.ToString().Replace(",",".")">@item.KURKODU</option>
                                        }
                                    }
                                }

                            </select>
                        </td>
                        <td>
                            <input type="text" name="ParaBirimiKuru" id="ParaBirimiKuru" class="form-control form-control-sm text-right" value="1.00" placeholder="Para Kuru" onchange="tutargetir()" required="">
                        </td>
                        <td>
                            <div class="input-group">
                                <span class="input-group-addon">₺</span>
                                <input type="text" class="form-control form-control-sm text-right" value="0.00" name="NetTutar" id="NetTutar" readonly placeholder="Tutar">
                            </div>

                        </td>
                        <td>
                            <div class="input-group">
                                <span class="input-group-addon">₺</span>
                                <input type="text" class="form-control form-control-sm text-right" value="0.00" name="KDVTutar" id="KDVTutar" readonly placeholder="KDV Tutar">
                            </div>

                        </td>
                        <td w="">
                            <button type="button" id="addRowBtn" onclick="butonlistele()"  class="btn btn-success btn-sm btn-rounded">
                                <span class="icon text-white-50">
                                    <i class="fas fa-plus"></i>
                                </span>
                            </button>

                        </td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.FATURA_HAREKETLERİ)
                    {
                        <tr>

                            <td style="width: 150px;" data-hiddenvalue="@item.STOKID"><input class="form-control form-control-sm" value="@item.STOK.STOKKODU/@item.STOK.STOKAD" readonly=""> </td>
                            <td style="width: 200px;">   <input type="text" class="form-control form-control-sm" value="@item.ACIKLAMA"></td>
                            <td id="tdmiktar"><input type="text" class="form-control form-control-sm" onchange="tutargetirrow(this)" value="@item.MIKTAR.ToString().Replace(",",".")"></td>
                            <td><input type="text" class="form-control form-control-sm" readonly value="@item.BIRIM"></td>
                            <td id="tdfiyat"><input type="text" class="form-control form-control-sm text-right" onchange="tutargetirrow(this)" value="@item.TOPLAMFIYAT.ToString().Replace(",",".")" required=""></td>
                            <td id="tdisk" style="width: 50px;"><input class="form-control form-control-sm" onchange="tutargetirrow(this)" value="@item.ISK1.ToString().Replace(",",".")"></td>
                            <td style="width: 76px;"> <input type="text" class="form-control form-control-sm text-right" readonly onchange="tutargetirrow(this)" value="@item.PARABIRIMI" required=""></td>
                            <td id="tdkur" style="width: 50px;"><input type="text" class="form-control form-control-sm text-right" onchange="tutargetirrow(this)" value="@item.PARAKUR.ToString().Replace(",",".")" required=""> </td>
                            <td id="count" class="countable" style="width: 115px;"><input type="text" readonly="" value="@item.NETFIYAT.ToString().Replace(",",".")" class="form-control form-control-sm text-right" aria-describedby="net-tutar"></td>
                            <td id="tdkdv" class="countablekdv" data-hiddenkdv="@item.STOK.KDV" style="width: 115px;"><input type="text" readonly="" value="@item.KDVTUTARI.ToString().Replace(",",".")" class="form-control form-control-sm text-right" aria-describedby="net-tutar"></td>


                            @{if (item.REFERANS != null)
                                {
                                    if (!item.REFERANS.Contains("STOKFIS"))
                                    {
                                        <td> <button type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button></td>

                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                }
                                else
                                {
                                    <td> <button type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button></td>
                                }
                            }

                            <td>@item.REFERANS</td>
                            <td>@item.REFERANSID</td>

                        </tr>


                    }
                </tbody>
            </table>
        </div>

    </div>
    <!-- Alt toplamlar -->
    <div class="card-footer ">
        <div class="row">
            <div class="col-md-6">
                <p> </p>
                <p></p>
                <p> </p>
            </div>
            <div class="col-md-6">
                <div class="form-group row mb-1">
                    <label for="toplam" class="col-sm-6 text-right col-form-label">Toplam Tutar</label>
                    <div class="col-sm-6">
                        <input type="text" id="toplam" class="form-control text-right form-control-sm" placeholder="0.00" readonly>
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label for="toplam" class="col-sm-6 text-right col-form-label">KDV Dahil Toplam Tutar</label>
                    <div class="col-sm-6">
                        <input type="text" id="kdvtoplam" class="form-control text-right form-control-sm" placeholder="0.00" readonly>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- butonlar -->
<div class="py-2">
    <button aria-label="" class="btn btn-primary " onclick="butongonder()">
        <span class="icon text-white-50">
            <i class="fas fa-save"></i>
        </span>
        <span class="text">Kaydet</span>
    </button>
    <a aria-label="" class="btn btn-secondary " href="@Url.RequestContext.HttpContext.Request.Url.ToString()" type="reset">
        <span class="icon text-white-50">
            <i class="fas fa-power-off"></i>
        </span>
        <span class="text">İptal</span>
    </a>
</div>










@if (Model.FATURA.TIP != 1)
{


    <div class="modal fade" id="ModalStokSec" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog modal-xl  modal-lg vertical-align-center" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">Stok/Hizmet Seç</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>

                    </div>
                    <div class="modal-body">
                        <nav>
                            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                                <a class="nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Stoklar</a>
                                <a class="nav-link" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Hizmetler</a>

                            </div>
                        </nav>
                        <div class="tab-content" id="nav-tabContent">
                            <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
                                <div id="FaturaCariSecDataTablo_wrapper" class="dataTables_wrapper form-inline dt-bootstrap no-footer">

                                    <div class="col-sm-12">
                                        <div class="table-responsive">
                                            <table id="kasatablo" class="table-bordered table-sm" data-show-search-clear-button="true"
                                                   data-show-footer="true" data-footer-style="footerStyle" data-show-print="true"
                                                   data-single-select="true" data-show-refresh="true" data-icon-size="sm"
                                                   data-side-pagination="server"
                                                   data-pagination="true"
                                                   data-page-size="10"
                                                   data-page-list="[10, 20, 50, 100, 200, 300]" data-show-export="true" data-reorderable-columns="true">
                                                <thead>
                                                    <tr>
                                                        <th data-field="state" class="no-print" data-print-ignore="true" data-checkbox="true"></th>
                                                        <th data-field="ID" data-print-ignore="true" class="text-center" data-visible="false" data-sortable="true" data-footer-formatter="idFormatter">ID</th>

                                                        <th data-field="STOKODU" data-sortable="true" data-footer-formatter="nameFormatter">Stok Kodu</th>
                                                        <th data-field="STOKAD" data-sortable="true">Stok İsmi</th>
                                                        <th data-field="MIKTAR" data-formatter="numberformatter" data-align="right" data-sortable="true">Miktar</th>
                                                        <th data-field="BIRIM">Birim</th>
                                                        <th data-field="TUTAR" data-formatter="numberformatter" data-align="right">Fiyatı</th>
                                                        <th data-field="PARABIRIMI" data-sortable="true" data-align="right">Paraba Birimi</th>
                                                        <th data-field="ISKONTO" data-formatter="numberformatter" data-align="right" data-sortable="true">İskonto</th>

                                                        <th data-field="KDV" data-formatter="numberformatter" data-align="right" data-sortable="true">KDV</th>
                                                        <th data-field="DEPO" data-sortable="true">Depo</th>

                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table><div id="FaturaCariSecDataTablo_processing" class="dataTables_processing panel panel-default" style="display: none;">İşleniyor...</div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
                                <table id="gelirtablo" class="table-bordered table-sm" data-show-search-clear-button="true"
                                       data-show-footer="true" data-footer-style="footerStyle" data-show-print="true"
                                       data-single-select="true" data-show-refresh="true" data-icon-size="sm"
                                       data-side-pagination="server"
                                       data-pagination="true"
                                       data-page-size="10"
                                       data-page-list="[10, 20, 50, 100, 200, 300]" data-show-export="true" data-reorderable-columns="true">
                                    <thead>
                                        <tr>
                                            <th data-field="state" class="no-print" data-print-ignore="true" data-checkbox="true"></th>
                                            <th data-field="ID" data-print-ignore="true" data-visible="false" class="text-center" data-sortable="true" data-footer-formatter="idFormatter">ID</th>

                                            <th data-field="GELIRKODU" data-sortable="true">Gelir Kodu</th>
                                            <th data-field="GELIRAD" data-sortable="true">Gelir Adı</th>
                                            <th data-field="KDVGRUP" data-sortable="true">KDV</th>
                                            <th data-field="TOPLAMTUTAR" class="td-actions text-right" data-align="right" data-sortable="true" data-formatter="numberformatter">Genel Durum</th>


                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>

                                </table>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" onclick="butonkasagetir()" data-dismiss="modal">Seç</button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                        </div>




                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="modal fade" id="ModalStokSec" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog modal-xl  modal-lg vertical-align-center" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">Stok/Gider Seç</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>

                    </div>
                    <div class="modal-body">
                        <nav>
                            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                                <a class="nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Stoklar</a>
                                <a class="nav-link" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Giderler</a>

                            </div>
                        </nav>
                        <div class="tab-content" id="nav-tabContent">
                            <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
                                <div id="FaturaCariSecDataTablo_wrapper" class="dataTables_wrapper form-inline dt-bootstrap no-footer">

                                    <div class="col-sm-12">
                                        <div class="table-responsive">
                                            <table id="kasatablo" class="table-bordered table-sm" data-show-search-clear-button="true"
                                                   data-show-footer="true" data-footer-style="footerStyle" data-show-print="true"
                                                   data-single-select="true" data-show-refresh="true" data-icon-size="sm"
                                                   data-side-pagination="server"
                                                   data-pagination="true"
                                                   data-page-size="10"
                                                   data-page-list="[10, 20, 50, 100, 200, 300]" data-show-export="true" data-reorderable-columns="true">
                                                <thead>
                                                    <tr>
                                                        <th data-field="state" class="no-print" data-print-ignore="true" data-checkbox="true"></th>
                                                        <th data-field="ID" data-print-ignore="true" class="text-center" data-visible="false" data-sortable="true" data-footer-formatter="idFormatter">ID</th>

                                                        <th data-field="STOKODU" data-sortable="true" data-footer-formatter="nameFormatter">Stok Kodu</th>
                                                        <th data-field="STOKAD" data-sortable="true">Stok İsmi</th>
                                                        <th data-field="MIKTAR" data-formatter="numberformatter" data-align="right" data-sortable="true">Miktar</th>
                                                        <th data-field="BIRIM">Birim</th>
                                                        <th data-field="TUTAR" data-formatter="numberformatter" data-align="right">Fiyatı</th>
                                                        <th data-field="PARABIRIMI" data-sortable="true" data-align="right">Paraba Birimi</th>
                                                        <th data-field="ISKONTO" data-formatter="numberformatter" data-align="right" data-sortable="true">İskonto</th>

                                                        <th data-field="KDV" data-formatter="numberformatter" data-align="right" data-sortable="true">KDV</th>
                                                        <th data-field="DEPO" data-sortable="true">Depo</th>

                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table><div id="FaturaCariSecDataTablo_processing" class="dataTables_processing panel panel-default" style="display: none;">İşleniyor...</div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
                                <table id="gidertablo" class="table-bordered table-sm" data-show-search-clear-button="true"
                                       data-show-footer="true" data-footer-style="footerStyle" data-show-print="true"
                                       data-single-select="true" data-show-refresh="true" data-icon-size="sm"
                                       data-side-pagination="server"
                                       data-pagination="true"
                                       data-page-size="10"
                                       data-page-list="[10, 20, 50, 100, 200, 300]" data-show-export="true" data-reorderable-columns="true">
                                    <thead>
                                        <tr>
                                            <th data-field="state" class="no-print" data-print-ignore="true" data-checkbox="true"></th>
                                            <th data-field="ID" data-print-ignore="true" data-visible="false" class="text-center" data-sortable="true" data-footer-formatter="idFormatter">ID</th>

                                            <th data-field="GIDERKODU" data-sortable="true">Gelir Kodu</th>
                                            <th data-field="GIDERAD" data-sortable="true">Gelir Adı</th>
                                            <th data-field="KDVGRUP" data-sortable="true">KDV</th>
                                            <th data-field="TOPLAMTUTAR" class="td-actions text-right" data-align="right" data-sortable="true" data-formatter="numberformatter">Genel Durum</th>


                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>

                                </table>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" onclick="butonkasagetir()" data-dismiss="modal">Seç</button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                        </div>




                    </div>
                </div>
            </div>
        </div>
    </div>

}
@section script{


    <script type="text/javascript">



        var bakiyefiltre = null;
        var carid=@Model.FATURA.CARIID;
        var caridg;
        var carikodu;
        var kasaid;
        var kasadg;
        var kasakodu;
        var birim;
        var kasaadı;
         var kdv;
        var gecicicarpan;

        var $table = $('#bootstrap-table');
        var $caritable = $('#caritablo');
        var $kasatable = $('#kasatablo');
        var $gelirtable = $('#gelirtablo');
        var $gidertable = $('#gidertablo');
    
        var parakuru;
        $(document).ready(function () {
            yenile();
        });
    function get_query_paramsstok(p) {

            var date = new Date("2000-01-01");
            var dateson = new Date("2080-01-01");


            var arr = [{ verismi: "TARIH", deger: date.formatMMDDYYYY(), deger2: dateson.formatMMDDYYYY(), filtretipi: 4 }];


            if (p.sort != null) {
                return {

                    extraParam: 'abc',

                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,
                    search: "",
                    sort: p.sort,

                    carid: carid,

                     TIPI:  @if (Url.RequestContext.HttpContext.Request.Url.ToString().Contains("GirişFiş")) { @:0
                }else
                    {@:1

                    }

    ,

                    filterler: null
                }
            } else {
                return {
                    extraParam: 'abc',
                    search: p.search,
                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,

                    sort: "ID",

                    carid: carid,

                     TIPI:  @if (Url.RequestContext.HttpContext.Request.Url.ToString().Contains("GirişFiş")) { @:0
                }else
                    {@:1

                    },



                    filterler: arr
                }

            }
        }
        function get_query_paramssiparis(p) {

            var date = new Date("2000-01-01");
            var dateson = new Date("2080-01-01");

            var arr = [{ verismi: "TARIH", deger: date.formatMMDDYYYY(), deger2: dateson.formatMMDDYYYY(), filtretipi: 4 }];
            arr.push({ verismi: "DURUM", deger: 0, deger2: "", filtretipi: 2 });
            arr.push({ verismi: "DURUM", deger: 2, deger2: "", filtretipi: 2 });

            if (p.sort != null) {
                return {

                    extraParam: 'abc',
                    search: p.search,
                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,

                    sort: p.sort,

                    filterler: arr
                }
            } else {
                return {
                    extraParam: 'abc',
                    search: p.search,
                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,

                    sort: "ID",

                    filterler: arr
                }

            }
        }
        function get_query_params(p) {

            var date = new Date("2000-01-01");
            var dateson = new Date("2080-01-01");

            var arr = [{ verismi: "TARIH", deger: date.formatMMDDYYYY(), deger2: dateson.formatMMDDYYYY(), filtretipi: 4 }];
            arr.push({ verismi: "hareket.DURUM", deger: 0, deger2: "", filtretipi: 2 });
            arr.push({ verismi: "hareket.DURUM", deger: 2, deger2: "", filtretipi: 2 });

            if (p.sort != null) {
                return {

                    extraParam: 'abc',
                    search: p.search,
                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,

                    sort: p.sort,

                    filterler: arr
                }
            } else {
                return {
                    extraParam: 'abc',
                    search: p.search,
                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,

                    sort: "ID",

                    filterler: arr
                }

            }
        }
        function get_query_paramsgelir(p) {


            var arr = [{ verismi: "TOPLAMTUTAR", deger: "0", deger2: "0", filtretipi: 3 }]

            if (p.sort != null) {
                return {

                    extraParam: 'abc',
                    search: p.search,
                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,

                    sort: p.sort,

                    filterler: arr
                }
            } else {
                return {
                    extraParam: 'abc',
                    search: "",
                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,

                    sort: "ID",

                    filterler: arr
                }

            }
        }

        function pad(d) {
            return (d < 10) ? '0' + d.toString() : d.toString();
        }
        Date.prototype.formatMM = function () {
            return (pad(this.getDate()) + "/" + pad(this.getMonth() + 1) +

                "/" + this.getFullYear());
        }


        function kurgetir() {
            var e = document.getElementById("ParaBirimi");
            document.getElementById("ParaBirimiKuru").value = e.options[e.selectedIndex].value;
            var tutar = parseFloat(document.getElementById("Mıktar").value.replaceAll(",", "")) * parseFloat(document.getElementById("Tutar").value.replaceAll(",", "")) * parseFloat(document.getElementById("ParaBirimiKuru").value.replaceAll(",", ""));
            document.getElementById("NetTutar").value = tutar - (parseFloat(tutar) * parseFloat(document.getElementById('iskonto').value.replaceAll(",", "")) / 100);
        }
        function tutargetir() {


            var tutar = parseFloat(document.getElementById("Mıktar").value.replaceAll(",", "")) * parseFloat(document.getElementById("Tutar").value.replaceAll(",", "")) * parseFloat(document.getElementById("ParaBirimiKuru").value.replaceAll(",", ""));
            document.getElementById("NetTutar").value = tutar - (parseFloat(tutar) * parseFloat(document.getElementById('iskonto').value.replaceAll(",", "")) / 100);
            kdvgetir();
        }
        function tutargetirrow(rowid) {
            var childs = rowid.parentNode.parentNode.childNodes;

            var fiyat = 0;
            var miktar = 0;
            var isk = 0;
            var kur = 0;
            var nettutar = null;
            var kdvtutar = null;
            var kdvtd = null;
            for (var i = 0; i < childs.length; i++) {
                if (childs[i].id == "tdfiyat") {

                    fiyat = parseFloat(childs[i].firstElementChild.value)
                }
                if (childs[i].id == "tdmiktar") {
                    miktar = parseFloat(childs[i].firstElementChild.value)
                }
                if (childs[i].id == "tdisk") {
                    isk = parseFloat(childs[i].firstElementChild.value)
                }
                if (childs[i].id == "tdkur") {
                    kur = parseFloat(childs[i].firstElementChild.value)
                }
                if (childs[i].id == "count") {
                    nettutar = childs[i].firstElementChild;
                }
                if (childs[i].id == "tdkdv") {
                    kdvtd = childs[i];
                    kdvtutar = childs[i].firstElementChild;
                }
            }

            var tutar = fiyat * miktar * kur;
            var sontutar = tutar - (parseFloat(tutar) * isk / 100);
            nettutar.value = tutar - (parseFloat(tutar) * isk / 100);
            kdvtutar.value = (sontutar * parseFloat(kdvtd.dataset.hiddenkdv) / 100) + sontutar;


            rowid.value = numberformatter(rowid.value);
            yenile();
        }
        function kdvgetir() {
            var tutar = parseFloat(document.getElementById("NetTutar").value.replaceAll(",", ""));

            document.getElementById("KDVTutar").value = (tutar * kdv / 100) + tutar;
        } function stoklistele() {
            if (document.getElementById("CariKodu").options[document.getElementById("CariKodu").selectedIndex].value != null)
                carid = document.getElementById("CariKodu").options[document.getElementById("CariKodu").selectedIndex].value;
            else
                carid = 0

        }
        function butoncarigetir() {

            carid = caridg;
            document.getElementById("CariKodu").value = carikodu;
            document.getElementById("ModalCariSec").style.display = "none";
            var sel = document.getElementById("ParaBirimi");
              var opts = sel.options;
            for (var opt, j = 0; opt = opts[j]; j++) {
                if (opt.text == parakuru) {
      sel.selectedIndex = j;
      break;
                }

            }
                kurgetir();

        }
        function butonkasagetir() {

            kasaid = kasadg;

            document.getElementById("Stok").dataset.hiddenvalue = kasakodu;
            document.getElementById("Stok").value = kasaadı;

            document.getElementById("ModalStokSec").style.display = "none";


        }


        $().ready(function () {



         

       
            $kasatable.bootstrapTable({

                type: "POST",
                url: "/STOK_Hareket/stokgetir",
                method: 'post',
                contentType: 'application/x-www-form-urlencoded',
                queryParams: get_query_paramsstok,
                       printPageBuilder: function (table) {
        return `
<html>
  <head>
  <style type="text/css" media="print">
  page {
    size: auto;
    margin: 25px 0 25px 0;
  }
  </style>
  <style type="text/css" media="all">
  table {
    border-collapse: collapse;
    font-size: 12px;
  }
  table, th, td {
    border: 1px solid grey;
  }
  th, td {
    text-align: center;
    vertical-align: middle;
  }
  p {
    font-weight: bold;
    margin-left:20px;
  }
  table {
    width:94%;
    margin-left:3%;
    margin-right:3%;
  }
  div.bs-table-print {
    text-align:center;
  }
    h1.bs-table-print {
    text-align:center;
  }
  </style>
    <title>@Session["FirmaAdı"]</title>
     </head>
  <body>

     <h1 class="bs-table-print">Stok Listesi</h1>

  <div class="bs-table-print">${table}</div>
  </body>
</html>`
      },
                clickToSelect: true,
                showRefresh: true,

                search: true,
                showToggle: true,
                showColumns: true,

                searchAlign: 'left',

                locale: 'tr-TR',
                formatShowingRows: function (pageFrom, pageTo, totalRows) {
                    return "Toplam " + totalRows+" Kayıt";
                },
                formatRecordsPerPage: function (pageNumber) {
                    return pageNumber + " Adet Listeleniyor";
                },

            });

            $kasatable.on('click-row.bs.table', function (e, row, $element) {
                kasaidg = row.ID;
                kasakodu = row.ID;
                kasaadı = row.STOKODU + "/" + row.STOKAD;
                if (row.ISKONTO != null && row.ISKONTO != "")
                    document.getElementById("iskonto").value = row.ISKONTO;
                else
                    document.getElementById("iskonto").value = 0;
                document.getElementById("Birim").value = row.BIRIM;
                if (row.TUTAR != null && row.TUTAR != "")
                    document.getElementById("Tutar").value = row.TUTAR;
                else
                    document.getElementById("Tutar").value = 0;
                document.getElementById("Birim").value = row.BIRIM;
                document.getElementById("Stok").dataset.gelirstok = 0;
                if (document.getElementById("kdvdahil").checked == true)
                    kdv = row.KDV;
                if (document.getElementById("kdvdahildegil").checked == true) {
                    kdv = 0;
                }
            });
            $kasatable.on('dbl-click-row.bs.table', function (e, row, $element) {
                kasaidg = row.ID;
              

                document.getElementById("Birim").value = row.BIRIM;
                document.getElementById("Stok").dataset.gelirstok = 0;
                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").value = row.STOKODU + "/" + row.STOKAD;
                if (row.ISKONTO != null && row.ISKONTO != "")
                    document.getElementById("iskonto").value = row.ISKONTO;
                else
                    document.getElementById("iskonto").value = 0;
                document.getElementById("Birim").value = row.BIRIM;
                if (row.TUTAR != null && row.TUTAR != "")
                    document.getElementById("Tutar").value = row.TUTAR;
                else
                    document.getElementById("Tutar").value = 0;

                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }

                $('#ModalStokSec').modal('hide');
                setTimeout(function () { $('#Açıklama').focus()}, 800);

            });
            $gelirtable.bootstrapTable({
                type: "POST",
                url: "/GELIR_BASLIK/GetData",
                method: 'post',
                contentType: 'application/x-www-form-urlencoded',
                queryParams: get_query_paramsgelir,

                clickToSelect: true,
                showRefresh: true,

                search: true,
                showToggle: true,
                showColumns: true,

                searchAlign: 'left',

                locale: 'tr-TR',
                formatShowingRows: function (pageFrom, pageTo, totalRows) {
                    return "Toplam " + totalRows+" Kayıt";
                },
                formatRecordsPerPage: function (pageNumber) {
                    return pageNumber + " Adet Listeleniyor";
                },


            });
            $gelirtable.on('check.bs.table', function (e, row) {

                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").dataset.gelirstok = 1;
                document.getElementById("Birim").value = "ADET(UNIT)";
                document.getElementById("Stok").value = row.GELIRKODU + "/" + row.GELIRAD;
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }
            });
            $gelirtable.on('click-row.bs.table', function (e, row, $element) {

                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").dataset.gelirstok = 1;
                document.getElementById("Birim").value = "ADET(UNIT)";
                document.getElementById("Stok").value = row.GELIRKODU + "/" + row.GELIRAD;
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }
            });
            $gelirtable.on('dbl-click-row.bs.table', function (e, row, $element) {

                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").dataset.gelirstok = 1;
                document.getElementById("Birim").value = "ADET(UNIT)";
                document.getElementById("Stok").value = row.GELIRKODU + "/" + row.GELIRAD;
                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }
                $('#ModalStokSec').modal('hide');
                setTimeout(function () { $('#Açıklama').focus() }, 800);


            });
            $gidertable.bootstrapTable({
                type: "POST",
                url: "/GIDER_BASLIK/GetData",
                method: 'post',
                contentType: 'application/x-www-form-urlencoded',
                queryParams: get_query_paramsgelir,

                clickToSelect: true,
                showRefresh: true,

                search: true,
                showToggle: true,
                showColumns: true,

                searchAlign: 'left',

                locale: 'tr-TR',
                formatShowingRows: function (pageFrom, pageTo, totalRows) {
                    return "Toplam " + totalRows+" Kayıt";
                },
                formatRecordsPerPage: function (pageNumber) {
                    return pageNumber + " Adet Listeleniyor";
                },


            });
            $gidertable.on('check.bs.table', function (e, row) {

                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").dataset.gelirstok = 2;
                document.getElementById("Birim").value = "ADET(UNIT)";
                document.getElementById("Stok").value = row.GIDERKODU + "/" + row.GIDERAD;
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }
            });
            $gidertable.on('click-row.bs.table', function (e, row, $element) {

                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").dataset.gelirstok = 2;
                document.getElementById("Birim").value = "ADET(UNIT)";
                document.getElementById("Stok").value = row.GIDERKODU + "/" + row.GIDERAD;
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }
            });
            $gidertable.on('dbl-click-row.bs.table', function (e, row, $element) {

                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").dataset.gelirstok = 2;
                document.getElementById("Birim").value = "ADET(UNIT)";
                document.getElementById("Stok").value = row.GIDERKODU + "/" + row.GIDERAD;
                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }
                $('#ModalStokSec').modal('hide');
                setTimeout(function () { $('#Açıklama').focus() }, 800);


            });
            //activate the tooltips after the data table is initialized
            $('[rel="tooltip"]').tooltip();

            $(window).resize(function () {
                $kasatable.bootstrapTable('resetView');
            });


        })
        function butonlistele() {

            if (parseFloat(document.getElementById('KDVTutar').value) == 0) {
                toastr["error"]("Lütfen Tutar Giriniz!");
            } else {
                $table.append('<tr data-index="0"><td style="width: 150px;" data-gelirstok="' + document.getElementById("Stok").dataset.gelirstok + '" data-hiddenvalue="' + document.getElementById("Stok").dataset.hiddenvalue + '"><input class="form-control form-control-sm" value="' + document.getElementById('Stok').value + '"  readonly> </td><td style="width: 200px">   <input type="text"  class="form-control form-control-sm" value="' + document.getElementById('Açıklama').value + '"></td><td id="tdmiktar"><input type="text" class="form-control form-control-sm"  onchange="tutargetirrow(this)"  value="' + document.getElementById('Mıktar').value + '"></td><td><input type="text" class="form-control form-control-sm" value="' + document.getElementById('Birim').value + '" readonly=""></td><td id="tdfiyat"><input type="text"  class="form-control form-control-sm" onchange="tutargetirrow(this)" value="' + document.getElementById('Tutar').value + '"></td><td id="tdisk" style="width: 50px;"><input type="text" class="form-control form-control-sm text-right" onchange="tutargetirrow(this)"  value="' + document.getElementById('iskonto').value + '" ></td><td style="width: 76px;"><input class="form-control form-control-sm" value="' + document.getElementById('ParaBirimi').options[document.getElementById('ParaBirimi').selectedIndex].text + '" readonly></td><td  id="tdkur"="width: 72px;"> <input type="text" class="form-control form-control-sm text-right" onchange="tutargetirrow(this)"  value="' + document.getElementById('ParaBirimiKuru').value + '"  required=""></td><td id="count" class="countable" style="width: 115px;"><input type="text" readonly=""   value="' + document.getElementById('NetTutar').value + '" class="form-control form-control-sm text-right" aria-describedby="net-tutar"></td><td id="tdkdv" data-hiddenkdv="' + kdv + '" class="countablekdv"><input type="text" class="form-control form-control-sm text-right"  readonly placeholder="KDV Tutar" value="' + document.getElementById('KDVTutar').value + '"></td><td> <button  type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded noprint">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button></td></tr>');
                document.getElementById("Stok").value = "";
                document.getElementById('KDVTutar').value = 0;
                $('#ModalStokSec').modal('show');
                yenile();


            }


        }
        function yenile() {maskla();


            var sum = 0;
            var sumkdv = 0;
            var table = document.getElementById("bootstrap-table");
            var ths = table.getElementsByTagName('td');
            var tds = table.getElementsByClassName('countable');
            var tdskdv = table.getElementsByClassName('countablekdv');
            for (var i = 0; i < tds.length; i++) {
                sum += isNaN(tds[i].childNodes[0].value.replaceAll(",", "")) ? 0 : parseFloat(tds[i].childNodes[0].value.replaceAll(",", ""));
            }
            for (var i = 0; i < tdskdv.length; i++) {
                sumkdv += isNaN(tdskdv[i].childNodes[0].value.replaceAll(",", "")) ? 0 : parseFloat(tdskdv[i].childNodes[0].value.replaceAll(",", ""));
            }
            document.getElementById("toplam").value = numberformatter(sum);
            document.getElementById("kdvtoplam").value = numberformatter(sumkdv);
           
        }
        function deleteRow(btn) {
  var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
                yenile();
}


        function deleteRow(btn) {
  var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
                yenile();
}
        function butongonder() {

            var arr = [];


            var oTable = document.getElementById('bootstrap-table');

            //gets rows of table
            var rowLength = oTable.rows.length;

            //loops through rows
            for (i = 2; i < rowLength; i++) {
                var stokb;
                var Stoka;
                //gets cells of current row
                var oCells = oTable.rows.item(i).cells;

                //gets amount of cells of current row
                var cellLength = oCells.length;

                //loops through each cell in current row
                for (var j = 0; j < cellLength; j++) {

                    // get your cell info here

                    var cellVal = oCells.item(j).innerHTML;
                    var cellVal = oCells.item(j).innerHTML;


                    var Miktar;
                    var Birim;
                    var Acıklama

                    var Tutar;
                    var İskonto;
                    var Parabirimi;
                    var Parakuru;
                    var NetTutar;
                    var Referans;
                    var KdvTutar;
                    var id = "";

                    if (j == 0) {
                        Stoka = oCells.item(j).dataset.hiddenvalue;
                        stokb = oCells.item(j).dataset.gelirstok;
                    }

                    if (j == 1)
                        Acıklama = oCells.item(j).firstElementChild.value;
                    if (j == 2)
                        Miktar = oCells.item(j).firstElementChild.value;
                    if (j == 3)
                        Birim = oCells.item(j).firstElementChild.value;
                    if (j == 4)
                        Tutar = oCells.item(j).firstElementChild.value;
                    if (j == 5)
                        İskonto = oCells.item(j).firstElementChild.value;
                    if (j == 6)
                        Parabirimi = oCells.item(j).firstElementChild.value;
                    if (j == 7)
                        Parakuru = oCells.item(j).firstElementChild.value;
                    if (j == 8)
                        NetTutar = oCells.item(j).firstElementChild.value;
                    if (j == 9)
                        KdvTutar = oCells.item(j).firstElementChild.value;
                    if (j == 11)
                        Referans = oCells.item(j).innerHTML
                    if (j == 12)
                        id = oCells.item(j).innerHTML;


                }
                arr.push({ GELIRGIDER: parseFloat(stokb), STOKKODU: Stoka, ACIKLAMA: Acıklama, MIKTAR: Miktar, BIRIM: Birim, ISKONTO: İskonto, TUTAR: Tutar, PARABIRIMI: Parabirimi, PARABIRIMIKUR: Parakuru, NETTutar: NetTutar, KDVTUTAR: KdvTutar, REFERANS: Referans, ID: id });
            }

            if (arr.length == 0) {
                toastr["error"]('Lütfen Kalem Ekleyiniz!');
            } else {
                $.ajax({
                    type: "POST",


                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    url: "/FATURA/datagonder/",
                    data: JSON.stringify({
                        CARIKOD: document.getElementById("CariKodu").dataset.hiddenvalue,
                        FISNO: document.getElementById("FisNo").value,
                        TARIH: document.getElementById("Tarih").value,
                        ODEMETARIHI: (document.getElementById("ÖdemeTarihi").value + 'T' + '@DateTime.Now.Hour.ToString("D" + 2)' + ':' + '@DateTime.Now.Second.ToString("D" + 2)'),
                        NOT: document.getElementById("Not").value,
                        SORUMLULUK_MERKEZI: document.getElementById("Smerkezi").value,
                        gelenhareket: arr,
                        IRSALIYELER: [],
                        SIPARISLER: [],
                        STOKFISLER: [],
                        TIPI:@{ if (Model.FATURA.TIP == 1)
                        {@: "Giriş"
                                                        }
                        else
                        {
                            if (Model.FATURA.TIP == 2)
                            {@: "Çıkış"
                                                            }

                        }
                } })
                    ,
                    success: function (result) {
                        historysend("/FATURA/FATURALISTE");
                    },
                    error: function (result) {
                        toastr["error"]('error');
                    }
                });
            }
        }

        function idFormatter() {
            return 'Toplam'
        }

        function nameFormatter(data) {
            return data.length
        }

            function numberformatter(value, row, index) {
                if (!value)
                    return "0.00";
                else {
                    return [

                        numberWithCommas((Number(value.toString().replace(",", "."))).toFixed(2))
                    ].join('');
                }
            }
            function numberWithCommas(x) {
                return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }
            function priceFormatter(data) {
                var field = this.field

                var toplam = data.map(function (row) {
                    if (row[field])
                        return +Number(row[field].toString().replace(",", "."))
                    else {
                        return +Number("0")
                    }
                }).reduce(function (sum, i) {
                    return sum + i
                }, 0);
                return numberWithCommas(toplam) + " TL"
            }

        function footerStyle(column) {
            return {
                id: {
                    classes: 'uppercase'
                },
                name: {
                    css: { 'font-weight': 'normal' }
                },
                price: {
                    css: { color: 'red' }
                }
            }[column.field]
        }


    </script>
}


