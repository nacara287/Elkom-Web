@model And.ElkomMuhasebe.UI.WEB.Controllers.SIPARIS_FISController.modelimiz



@{
    bool giris = false; ;

    if (Model.SIPARIS.TIP == 1)
    {
        ViewBag.Title = "Alış Siparişi Kartı";
        ViewBag.baslık = "Alış Siparişi";
    }
    else { ViewBag.Title = "Satış Siparişi Kartı"; ViewBag.baslık = "Satış Siparişi"; }
    Layout = "~/Views/Shared/yeni.cshtml";
    
}


<img id="load" style="display:none" src="@Model.firmalogo">
<!-- Fiş bilgileri -->
<div class="card">
    <div class="card-body p-3">
        <div class="form-row">
            <div class="form-group col-md-4">
                <label>Cari Adı/Kodu</label>
                <input id="CariKodu" class="js-example-data-ajax form-control form-control-sm" readonly data-hiddenvalue="@Model.SIPARIS.CARI.ID" value="@Model.SIPARIS.CARI.CARIKOD/@Model.SIPARIS.CARI.FIRMAUNVANI">
            </div>
            <div class="form-group col-md-2">
                <label>Sipariş Numarası</label>
                <input id="FisNo" type="text" class="form-control form-control-sm" placeholder="Fiş Numarası" value="@Model.SIPARIS.SIPARISNO" readonly>
            </div>
            <div class="form-group col-md-2">
                <label>Sipariş Tarihi</label>
                <input id="Tarih" type="datetime-local" class="form-control form-control-sm" value="@Model.SIPARIS.TARIH.Value.Year.ToString("D" + 4)-@Model.SIPARIS.TARIH.Value.Month.ToString("D" + 2)-@Model.SIPARIS.TARIH.Value.Day.ToString("D" + 2)@Html.Raw("T")@Model.SIPARIS.TARIH.Value.Hour.ToString("D" + 2):@Model.SIPARIS.TARIH.Value.Minute.ToString("D" + 2)">
            </div>
            <div class="form-group col-md-2">
                <label>Vade</label>
                <input id="ÖdemeTarihi" type="date" class="form-control form-control-sm" value="@Model.SIPARIS.ODEMETARIHI.Value.Year.ToString("D" + 4)-@Model.SIPARIS.ODEMETARIHI.Value.Month.ToString("D" + 2)-@Model.SIPARIS.ODEMETARIHI.Value.Day.ToString("D" + 2)">
            </div>
            <div class="form-group col-md-2">
                <label>Teslim Yeri</label>
                <input id="TeslimYeri" type="text" class="form-control form-control-sm" value="@Model.SIPARIS.TESLIM_YERI">
            </div>
            <div class="form-group col-md-2">
                <label>Teslim Süresi</label>
                <input id="TeslimSüresi" type="text" class="form-control form-control-sm" value="@Model.SIPARIS.TESLIMSURESI">
            </div>
            <div class="form-group col-md-2">
                <label>Muhattap Adı</label>
                <input id="MuhattapAdı" type="text" class="form-control form-control-sm" value="@Model.SIPARIS.MUHATTAP">
            </div>
            <div class="form-group col-md-2">
                <label>Nakliyesi</label>
                <input id="Nakliye" type="text" class="form-control form-control-sm" value="@Model.SIPARIS.NAKLIYESI">
            </div>
            <div class="form-group col-md-4">
                <label>Sipariş Notu</label>
                <input id="Not" type="text" class="form-control form-control-sm" placeholder="Not" value="@Model.SIPARIS.ACIKLAMA">
            </div>
            <div class="form-group col-md-2">
                <label>Sorumluluk Merkezi</label>
                <select id="Smerkezi" class="form-control form-control-sm">
                    @{ if (Model.sORUMLULUK_MERKEZIs != null)
                        {
                            foreach (var item in Model.sORUMLULUK_MERKEZIs)
                            {
                                <option>@item.ACIKLAMA</option>
                            }
                        }
                    }
                </select>
            </div>

            <div class="col-md-12">
                <hr data-content="Sipariş Durum" class="hr-text">
            </div>

            <div class="form-group col-md-2">
                <label>Onaylandı</label>
                @Html.EditorFor(model => model.SIPARIS.ONAYLANDI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
            </div>
            <div class="form-group col-md-2">
                <label>Reddedildi</label>
                @Html.EditorFor(model => model.SIPARIS.REDDEDILDI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
            </div>
            <div class="form-group col-md-2">
                <label>Red Açıklaması</label>
                <input id="redacıklama" type="text" class="form-control form-control-sm" value="@Model.SIPARIS.RED_ACIKLAMA">
            </div>
        </div>
        <!-- Liste -->
        <div class="table-responsive" id="yazdirilcak">
            <table id="bootstrap-table" class="table table-bordered">
                <thead>
                    <tr>
                        <th data-field="STOKADI" data-sortable="true">Stok Kodu</th>
                        <th data-field="ACIKLAMA" data-sortable="true">Açıklama</th>
                        <th data-field="MIKTAR" data-sortable="true">Mıktar</th>
                        <th data-field="BIRIM" data-sortable="true">Birim</th>
                        <th data-field="EN" data-sortable="true">En</th>
                        <th data-field="BOY" data-sortable="true">Boy</th>
                        <th data-field="YUK" data-sortable="true">Yükseklik</th>
                        <th data-field="RENK" data-sortable="true">Renk</th>
                        <th data-field="TUTAR" data-sortable="true" data-footer-formatter="priceFormatter">Fiyat</th>
                        <th data-field="ISKONTO" data-sortable="true" data-footer-formatter="priceFormatter">İskonto</th>
                        <th data-field="PARABIRIMI" data-sortable="true">Para Birimi</th>
                        <th data-field="PARABIRIMIKUR" data-sortable="true">Para Kuru</th>
                        <th data-field="NETTUTAR" data-sortable="true" class="countable">Tutar</th>
                        <th data-field="KDVTUTAR" data-sortable="true" class="countable">KDV Tutar</th>
                        <th></th>
                    </tr>
                    <tr class="no-print">
                        <td>
                            <input type="text" readonly class="form-control form-control-sm" onclick="stoklistele()" data-toggle="modal" data-target="#ModalStokSec" name="Stok" id="Stok" placeholder="StokAdı" onchange="tutargetir()">

                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" value="Açıklama" id="Açıklama" onchange="tutargetir()">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm text-right" name="Mıktar" id="Mıktar" value="0" onchange="tutargetir()">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" name="Birim" id="Birim" value="" readonly onchange="tutargetir()">

                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" value="En" id="En">



                        </td>
                        <td>  <input type="text" class="form-control form-control-sm" value="Boy" id="Boy"></td>
                        <td>  <input type="text" class="form-control form-control-sm" value="Yükseklik" id="Yükseklik"></td>
                        <td> <input type="text" class="form-control form-control-sm" value="Renk" id="Renk"></td>
                        <td>
                            <input type="text" class="form-control form-control-sm text-right masklancak" value="0.00" name="Tutar" id="Tutar" onchange="tutargetir()" placeholder="Fiyat" required="">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm text-right" value="0" name="iskonto" id="iskonto" onchange="tutargetir()" placeholder="%.." required="">
                        </td>
                        <td>
                            <select class="custom-select custom-select-sm" name="ParaBirimi" id="ParaBirimi" onchange="kurgetir(),tutargetir()">


                                @{ if (Model.KUR_BASLIKa != null)
                                    {
                                        <option value="1">TRY</option>
                                        foreach (var item in Model.KUR_BASLIKa)
                                        {
                                            <option value="@item.KUR.ToString().Replace(",",".")">@item.KURKODU</option>
                                        }
                                    }
                                }

                            </select>
                        </td>
                        <td>
                            <input type="text" name="ParaBirimiKuru" id="ParaBirimiKuru" class="form-control form-control-sm text-right" value="1.00" placeholder="Para Kuru" onchange="tutargetir()" required="">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm text-right" value="0.00" name="NetTutar" id="NetTutar" readonly placeholder="Tutar">

                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm text-right" value="0.00" name="KDVTutar" id="KDVTutar" readonly placeholder="KDV Tutar">
                        </td>
                        <td>
                            <button type="button" id="addRowBtn" onclick="butonlistele()" class="btn btn-success btn-sm btn-rounded">
                                <span class="icon text-white-50">
                                    <i class="fas fa-plus"></i>
                                </span>
                            </button>

                        </td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.SIPARIS_HAREKETLERİ)
                    {
                    <tr>
                        <td data-hiddenvalue="@item.STOKID">@item.STOK.STOKKODU/@item.STOK.STOKAD </td>
                        <td>@item.ACIKLAMA</td>


                        <td>@item.MIKTAR</td>
                        <td>@item.BIRIM</td>
                        <td>@item.EN </td>
                        <td>@item.BOY </td>
                        <td>@item.YUKSEKLIK </td>
                        <td>@item.RENK </td>


                        <td>@item.TOPLAMFIYAT.ToString().Replace(",", ".")</td>
                        <td>@item.ISK1.ToString().Replace(",", ".")</td>
                        <td>@item.PARABIRIMI</td>
                        <td>@item.PARAKUR</td>
                        <td class="countable">@item.NETFIYAT.ToString().Replace(",", ".")</td>
                        <td class="countablekdv">@item.KDVTUTARI.ToString().Replace(",", ".")</td>
                        <td class="no-print"> <button type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button></td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <!-- Alt toplamlar -->
    <div class="card-footer ">
        <div class="row">
            <div class="col-md-6">
               
            </div>
            <div class="col-md-6">
                <div class="form-group row mb-1">
                    <label for="" class="col-sm-6 text-right col-form-label">Ara Toplam</label>
                    <div class="col-sm-6">
                        <input id="" type="text" class="form-control text-right form-control-sm" placeholder="0.00" readonly>
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label for="ToplamTutar" class="col-sm-6 text-right col-form-label">Toplam Tutar</label>
                    <div class="col-sm-6">
                        <input id="toplam" type="text" class="form-control text-right form-control-sm" placeholder="0.00" readonly>
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label for="kdvtoplam" class="col-sm-6 text-right col-form-label">KDV Toplam</label>
                    <div class="col-sm-6">
                        <input id="kdvtoplam" type="text" class="form-control text-right form-control-sm" placeholder="0.00" readonly>
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label for="" class="col-sm-6 text-right col-form-label">Toplam İskonto</label>
                    <div class="col-sm-6">
                        <input id="" type="text" class="form-control text-right form-control-sm" placeholder="0.00" readonly>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- butonlar -->
<div class="py-2">
    <button aria-label="" class="btn btn-primary " onclick="butongonder(this)">
        <span class="icon text-white-50">
            <i class="fas fa-save"></i>
        </span>
        <span class="text">Kaydet</span>
    </button>
    <a aria-label="" class="btn btn-secondary " href="@Url.RequestContext.HttpContext.Request.Url.ToString()" type="reset">
        <span class="icon text-white-50">
            <i class="fas fa-power-off"></i>
        </span>
        <span class="text">İptal</span>
    </a>
    <button aria-label="" class="btn btn-primary " onclick="butongonder(this,true)">
        <span class="icon text-white-50">
            <i class="fas fa-print"></i>
        </span>
        <span class="text">Kaydet ve Yazdır</span>
    </button>
</div>










<div class="modal fade" id="ModalStokSec" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog modal-xl  modal-lg vertical-align-center" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Stok Seç</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>

                </div>
                <div class="modal-body">
                    <div id="FaturaCariSecDataTablo_wrapper" class="dataTables_wrapper form-inline dt-bootstrap no-footer">

                        <div class="col-sm-12">
                            <div class="table-responsive">
                                <table id="kasatablo" class="table-bordered table-sm" data-show-search-clear-button="true"
                                       data-show-footer="true" data-footer-style="footerStyle" data-show-print="true"
                                       data-single-select="true" data-show-refresh="true" data-icon-size="sm"
                                       data-side-pagination="server"
                                       data-pagination="true"
                                       data-page-size="10"
                                       data-page-list="[10, 20, 50, 100, 200, 300]" data-show-export="true" data-reorderable-columns="true">
                                    <thead>
                                        <tr>
                                            <th data-field="state" class="no-print" data-print-ignore="true" data-checkbox="true"></th>
                                            <th data-field="ID" data-print-ignore="true" class="text-center" data-visible="false" data-sortable="true" data-footer-formatter="idFormatter">ID</th>

                                            <th data-field="STOKODU" data-sortable="true" data-footer-formatter="nameFormatter">Stok Kodu</th>
                                            <th data-field="STOKAD" data-sortable="true">Stok İsmi</th>
                                            <th data-field="MIKTAR" data-formatter="numberformatter" data-align="right" data-sortable="true">Miktar</th>
                                            <th data-field="BIRIM">Birim</th>
                                            <th data-field="TUTAR" data-formatter="numberformatter" data-align="right">Fiyatı</th>
                                            <th data-field="EN" data-formatter="numberformatter" data-align="right" data-sortable="true" data-visible="false">En</th>
                                            <th data-field="BOY" data-formatter="numberformatter" data-align="right" data-sortable="true" data-visible="false">Boy</th>
                                            <th data-field="YUKSEKLIK" data-formatter="numberformatter" data-align="right" data-sortable="true" data-visible="false">Yukseklik</th>
                                            <th data-field="RENK" data-formatter="numberformatter" data-align="right" data-sortable="true" data-visible="false">Renk</th>
                                            <th data-field="PARABIRIMI" data-sortable="true" data-align="right">Paraba Birimi</th>
                                            <th data-field="ISKONTO" data-formatter="numberformatter" data-align="right" data-sortable="true">İskonto</th>

                                            <th data-field="KDV" data-formatter="numberformatter" data-align="right" data-sortable="true">KDV</th>
                                            <th data-field="DEPO" data-sortable="true">Depo</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table><div id="FaturaCariSecDataTablo_processing" class="dataTables_processing panel panel-default" style="display: none;">İşleniyor...</div>
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="butonkasagetir()" data-dismiss="modal">Seç</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Vazgeç</button>
                    </div>




                </div>
            </div>
        </div>
    </div>
</div>

@section script{

    <script type="text/javascript">

        var baslık = "@ViewBag.baslık";

        var bakiyefiltre = null;
        var carid=0;
        var caridg;
        var carikodu;
        var kasaid;
        var kasadg;
        var kasaadı;
        var kasakodu;
        var birim;
        var checkedRows = [];
        var irsaliyeidler = [];
         var kdv;
        var gecicicarpan;

       


        $(document).ready(function () {
     
            yenile();
           @if (Model.print)
               {
                   @:printDiv('printableArea');
               }


        });
        function pad(d) {
            return (d < 10) ? '0' + d.toString() : d.toString();
        }
        Date.prototype.formatMM = function () {
            return (pad(this.getDate()) + "/" + pad(this.getMonth() + 1) +

                "/" + this.getFullYear());
        }
        var $table = $('#bootstrap-table');
        var $irsaliyetable = $('#irsaliye-table');
        var $irsaliyeharekettable = $('#irsaliyehareket-table');
        var $caritable = $('#caritablo');
        var $kasatable = $('#kasatablo');

        var parakuru;
          function get_query_paramsstok(p) {

            var date = new Date("2000-01-01");
            var dateson = new Date("2080-01-01");


            var arr = [{ verismi: "TARIH", deger: date.formatMMDDYYYY(), deger2: dateson.formatMMDDYYYY(), filtretipi: 4 }];


            if (p.sort != null) {
                return {

                    extraParam: 'abc',

                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,
                    search: "",
                    sort: p.sort,

                    carid: carid,

                     TIPI:  @if (Url.RequestContext.HttpContext.Request.Url.ToString().Contains("GirişFiş")) { @:0
                }else
                    {@:1

                    }

    ,

                    filterler: null
                }
            } else {
                return {
                    extraParam: 'abc',
                    search: p.search,
                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,

                    sort: "ID",

                    carid: carid,

                     TIPI:  @if (Url.RequestContext.HttpContext.Request.Url.ToString().Contains("GirişFiş")) { @:0
                }else
                    {@:1

                    },



                    filterler: arr
                }

            }
        }
        function carikurgetir() {
            $.ajax({
                type: "POST",

                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: "/CARI_BASLIK/getparabirimi/",
                data: JSON.stringify({
                    kod: document.getElementById("CariKodu").options[document.getElementById("CariKodu").selectedIndex].value
                }),
                success: function (result) {
                    if (result != "TRY") {
                        var sel = document.getElementById("ParaBirimi");

                        var opts = sel.options;
                        for (var opt, j = 0; opt = opts[j]; j++) {
                            if (opt.text == result.parabirimi) {
                                sel.selectedIndex = j;

                            } else {

                            }
                            kurgetir();
                        }
                    } else {
                        var sel = document.getElementById("ParaBirimi");

                        var opts = sel.options;
                        for (var opt, j = 0; opt = opts[j]; j++) {
                            if (opt.text == "TRY") {
                                sel.selectedIndex = j;

                            }
                            opt.disabled = false;


                        }
                        kurgetir();
                    }

                }
                ,
                error: function (result) {
                    toastr["error"]('error');
                }
            });
        }





        function kurgetir() {
            var e = document.getElementById("ParaBirimi");
            document.getElementById("ParaBirimiKuru").value = e.options[e.selectedIndex].value.replaceAll(",", "");
            var tutar = parseFloat(document.getElementById("Mıktar").value.replaceAll(",", "")) * parseFloat(document.getElementById("Tutar").value.replaceAll(",", "")) * parseFloat(document.getElementById("ParaBirimiKuru").value.replaceAll(",", ""));
            document.getElementById("NetTutar").value = tutar - (parseFloat(tutar) * parseFloat(document.getElementById('iskonto').value.replaceAll(",", "")) / 100);
        }
        function tutargetir() {


            var tutar = parseFloat(document.getElementById("Mıktar").value.replaceAll(",", "")) * parseFloat(document.getElementById("Tutar").value.replaceAll(",", "")) * parseFloat(document.getElementById("ParaBirimiKuru").value.replaceAll(",", ""));
            document.getElementById("NetTutar").value = tutar - (parseFloat(tutar) * parseFloat(document.getElementById('iskonto').value.replaceAll(",", "")) / 100);
            kdvgetir();
        }
        function kdvgetir() {
            var tutar = parseFloat(document.getElementById("NetTutar").value.replaceAll(",", ""));

            document.getElementById("KDVTutar").value = (tutar * kdv / 100) + tutar;
        }
        function stoklistele() {
            if (document.getElementById("CariKodu").options[document.getElementById("CariKodu").selectedIndex].value != null)
                carid = document.getElementById("CariKodu").options[document.getElementById("CariKodu").selectedIndex].value;
            else
                carid = 0

        }
        function printDiv(divName) {


            $.ajax({
                type: "POST",


                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: "/CARI_BASLIK/getcariinfo/",
                data: JSON.stringify({
                    kod: document.getElementById("CariKodu").dataset.hiddenvalue


                }),
                success: function (result) {
                    cariadı = result.cari.FIRMAUNVANI;
                    carikodu = result.cari.CARIKOD;
                    cariadresi = result.cari.ISADRES1;
                    caritelefon = result.cari.ISTEL;
                    firmalogo = result.firma.FirmaResimUrl;
                    firmaadres = result.firma.ADRESI1;
                    firmagsm = result.firma.YONETICI_TEL;
                    firmatel = result.firma.TEL;
                    firmafax = result.firma.FAX;
                    var printContents = document.getElementById("yazdirilcak").innerHTML;
                    var originalContents = document.body.innerHTML;
                    var content = "";

                    var FISNO = document.getElementById("FisNo").value;
                    var TARIH = document.getElementById("Tarih").value;
                    var NOT = document.getElementById("Not").value;
                    var toplamtutar = document.getElementById("toplam").value;
                    content += `
           <style>
.vl {
  border-left: 4px solid red;
  height: 130px;
}
</style>
    <div class=" container-fluid">



      <div class="row d-flex justify-content-between align-items-end">

        <div class="col" style="max-width: 50%;">
         <img src="${firmalogo}">



        </div>

      <div class="col" style="max-width: 1%;">
       <div class="vl"></div>
    </div>
      <div class="col" style=" text-align:left">
    <div class="row">   <a>
     ${firmaadres}
    </a> </div>
   <div class="row">  <h5>Gsm:</h5>${firmagsm}</div>
       <div class="row">
     <h5>Tel:</h5> ${firmatel}     </div>
       <div class="row">
     <h5>Fax:</h5>${firmafax}</div>
       <div class="row"></div>

    </div>
    <div class="col">

        <h1 style="color:red"><strong>SİPARİŞ FİŞİ </strong></h1>
    </div>
      </div>

      <hr>

      <div class="row">
        <div class="col-8">
          <table>
            <tbody>
            <tr>
              <td><h2>Sayın:</h2> </td>
              <td></td>
              <td><h2 style="color:red">${carikodu + "/" + cariadı}</h2></td>
            </tr>

          </table>
        </div>
        <div class="col-4">
      <table>
            <tbody>
            <tr>
              <td><h3>No:</h3> </td>

              <td><h3 style="color:red">${FISNO}</h3></td>
            </tr>
      <tr>
              <td><h3>Tarih:</h3> </td>

              <td><h3 style="color:red">${TARIH}</h3></td>
            </tr>
          </table>
        </div>
      </div>
`;




                    content += printContents;
                    content += ` <div class="table-responsive">
                <table class="table table-striped table-sm" >

                    <tfoot>
                        <tr style="border-top: solid;">
                            <td></td>
                            <td></td>
                            <td></td>
                            <th class="text-right" scope="row" >Toplam:</th>
                            <th class="text-right" scope="row" >${toplamtutar}</th>
                            <th colspan="2" ></th>
                        </tr>


                    </tfoot>
                    <caption></caption>
        </table >
       </div>
    </div>
   `;
                    document.body.innerHTML = content;
                    window.print();

                    document.body.innerHTML = originalContents;
                    historysend("/SIPARIS_FIS/SIPARISLISTE");

                },
                error: function (result) {
                    toastr["error"]('error');
                }
            });

        }
        function butoncarigetir() {

            carid = caridg;
            document.getElementById("CariKodu").value = carikodu;
            document.getElementById("ModalCariSec").style.display = "none";
            var sel = document.getElementById("ParaBirimi");
              var opts = sel.options;
            for (var opt, j = 0; opt = opts[j]; j++) {
                if (opt.text == parakuru) {
      sel.selectedIndex = j;
      break;
                }

            }
                kurgetir();

        }
        function butonkasagetir() {

            kasaid = kasadg;
            document.getElementById("Stok").dataset.hiddenvalue = kasakodu;
            document.getElementById("Stok").value = kasaadı;

            document.getElementById("ModalStokSec").style.display = "none";
            document.getElementById("Açıklama").focus();


        }


        $().ready(function () {


    $kasatable.bootstrapTable({

                type: "POST",
                url: "/STOK_Hareket/stokgetir",
                method: 'post',
                contentType: 'application/x-www-form-urlencoded',
                queryParams: get_query_paramsstok,
                       printPageBuilder: function (table) {
        return `
<html>
  <head>
  <style type="text/css" media="print">
  page {
    size: auto;
    margin: 25px 0 25px 0;
  }
  </style>
  <style type="text/css" media="all">
  table {
    border-collapse: collapse;
    font-size: 12px;
  }
  table, th, td {
    border: 1px solid grey;
  }
  th, td {
    text-align: center;
    vertical-align: middle;
  }
  p {
    font-weight: bold;
    margin-left:20px;
  }
  table {
    width:94%;
    margin-left:3%;
    margin-right:3%;
  }
  div.bs-table-print {
    text-align:center;
  }
    h1.bs-table-print {
    text-align:center;
  }
  </style>
    <title>@Session["FirmaAdı"]</title>
     </head>
  <body>

     <h1 class="bs-table-print">Stok Listesi</h1>

  <div class="bs-table-print">${table}</div>
  </body>
</html>`
      },
                clickToSelect: true,
                showRefresh: true,

                search: true,
                showToggle: true,
                showColumns: true,

                searchAlign: 'left',

                locale: 'tr-TR',
                formatShowingRows: function (pageFrom, pageTo, totalRows) {
                    return "Toplam " + totalRows+" Kayıt";
                },
                formatRecordsPerPage: function (pageNumber) {
                    return pageNumber + " Adet Listeleniyor";
                },

            });

            $kasatable.on('click-row.bs.table', function (e, row, $element) {
                kasaidg = row.ID;
                kasakodu = row.ID;
                kasaadı = row.STOKODU + "/" + row.STOKAD;
                if (row.ISKONTO != null && row.ISKONTO != "")
                    document.getElementById("iskonto").value = row.ISKONTO;
                else
                    document.getElementById("iskonto").value = 0;

                if (row.TUTAR != null && row.TUTAR != "")
                    document.getElementById("Tutar").value = row.TUTAR;
                else
                    document.getElementById("Tutar").value = 0;
                document.getElementById("Birim").value = row.BIRIM;

                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").value = row.STOKODU + "/" + row.STOKAD;
                document.getElementById("En").value = row.EN;
                document.getElementById("Boy").value = row.BOY;
                document.getElementById("Yükseklik").value = row.YUKSEKLIK;
                document.getElementById("Renk").value = row.RENK;
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }
            });
            $kasatable.on('dbl-click-row.bs.table', function (e, row, $element) {
                kasaidg = row.ID;

                if (row.ISKONTO != null && row.ISKONTO != "")
                    document.getElementById("iskonto").value = row.ISKONTO;
                else
                    document.getElementById("iskonto").value = 0;

                if (row.TUTAR != null && row.TUTAR != "")
                    document.getElementById("Tutar").value = row.TUTAR;
                else
                    document.getElementById("Tutar").value = 0;
                document.getElementById("Birim").value = row.BIRIM;

                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").value = row.STOKODU + "/" + row.STOKAD;
                document.getElementById("En").value = row.EN;
                document.getElementById("Boy").value = row.BOY;
                document.getElementById("Yükseklik").value = row.YUKSEKLIK;
                document.getElementById("Renk").value = row.RENK;
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }

                $('#ModalStokSec').modal('hide');

                setTimeout(function () { $('#Mıktar').focus() }, 800);
            });


            //activate the tooltips after the data table is initialized
            $('[rel="tooltip"]').tooltip();

            $(window).resize(function () {
                $kasatable.bootstrapTable('resetView');
            });


        })
        function butonlistele() {
            $('#ModalStokSec').modal('show');


            $table.append('<tr data-index="0"><td data-hiddenvalue="' + document.getElementById("Stok").dataset.hiddenvalue + '">' + document.getElementById('Stok').value + '</td><td>' + document.getElementById('Açıklama').value + '</td><td>' + document.getElementById('Mıktar').value + '</td><td>' + document.getElementById('Birim').value + '</td><td>' + document.getElementById('En').value + '</td><td>' + document.getElementById('Boy').value + '</td><td>' + document.getElementById('Yükseklik').value + '</td><td>' + document.getElementById('Renk').value + '</td><td>' + numberformatter(document.getElementById('Tutar').value.replaceAll(",", "")) + '</td><td>' + numberformatter(document.getElementById('iskonto').value.replaceAll(",", "")) + '</td><td>' + document.getElementById('ParaBirimi').options[document.getElementById('ParaBirimi').selectedIndex].text + '</td><td>' + document.getElementById('ParaBirimiKuru').value.replaceAll(",", "") + '</td><td class="countable">' + numberformatter(document.getElementById('NetTutar').value.replaceAll(",", "")) + '</td><td class="countablekdv">' + numberformatter(document.getElementById('KDVTutar').value.replaceAll(",", "")) + '</td><td class="no-print"> <button  type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button></td></tr>');
            yenile();

            setTimeout(function () { $('#Mıktar').focus() }, 800);





        }
        function yenile() {maskla();
            var sum = 0;
            var sumkdv = 0;
            var table = document.getElementById("bootstrap-table");
            var ths = table.getElementsByTagName('td');
            var tds = table.getElementsByClassName('countable');
            var tdskdv = table.getElementsByClassName('countablekdv');
            for (var i = 0; i < tds.length; i++) {
                sum += isNaN(tds[i].innerText.replaceAll(",", "")) ? 0 : parseFloat(tds[i].innerText.replaceAll(",", ""));
            }
            for (var i = 0; i < tdskdv.length; i++) {
                sumkdv += isNaN(tdskdv[i].innerText.replaceAll(",", "")) ? 0 : parseFloat(tdskdv[i].innerText.replaceAll(",", ""));
            }
            document.getElementById("toplam").value = numberformatter(sum);
            document.getElementById("kdvtoplam").value = numberformatter(sumkdv);
      

        }
        function deleteRow(btn) {
  var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
                yenile();
}
        function butongonder(buton,yazdir) {

            var arr = [];


            var oTable = document.getElementById('bootstrap-table');

            //gets rows of table
            var rowLength = oTable.rows.length;

            //loops through rows
            for (i = 2; i < rowLength; i++) {

                //gets cells of current row
                var oCells = oTable.rows.item(i).cells;

                //gets amount of cells of current row
                var cellLength = oCells.length;

                //loops through each cell in current row
                for (var j = 0; j < cellLength; j++) {

                    // get your cell info here

                    var cellVal = oCells.item(j).innerHTML;
                    var cellVal = oCells.item(j).innerHTML;

                    var Stoka;
                    var Miktar;
                    var Birim;
                    var Acıklama;
                    var En;
                    var Boy;
                    var Yükseklik;
                    var Renk;
                    var Tutar;
                    var İskonto;
                    var Parabirimi;
                    var Parakuru;
                    var NetTutar;

                     var KdvTutar;
                    if (j == 0)
                        Stoka = oCells.item(j).dataset.hiddenvalue;
                    if (j == 1)
                        Acıklama = oCells.item(j).innerHTML;
                    if (j == 2)
                        Miktar = oCells.item(j).innerHTML;
                    if (j == 3)
                        Birim = oCells.item(j).innerHTML;
                    if (j == 4)
                        En = oCells.item(j).innerHTML;
                    if (j == 5)
                        Boy = oCells.item(j).innerHTML;
                    if (j ==6)
                        Yükseklik = oCells.item(j).innerHTML;
                    if (j == 7)
                        Renk = oCells.item(j).innerHTML;

                    if (j == 8)
                        Tutar = oCells.item(j).innerHTML;
                    if (j == 9)
                        İskonto = oCells.item(j).innerHTML;
                    if (j == 10)
                        Parabirimi = oCells.item(j).innerHTML;
                    if (j == 11)
                        Parakuru = oCells.item(j).innerHTML;
                     if (j == 12)
                        NetTutar = oCells.item(j).innerHTML;
                     if (j == 13)
                       KdvTutar = oCells.item(j).innerHTML;



                }
                arr.push({ STOKKODU: Stoka, ACIKLAMA: Acıklama, EN: En, BOY: Boy, YUKSEKLIK: Yükseklik, RENK: Renk, MIKTAR: Miktar, BIRIM: Birim, ISKONTO: İskonto, TUTAR: Tutar, PARABIRIMI: Parabirimi, PARABIRIMIKUR: Parakuru, NETTutar: NetTutar, KDVTUTAR: KdvTutar });
            }
            $.each(checkedRows, function (index, value) {
                irsaliyeidler.push(value.id);
            });
            if (arr.length == 0) {
                toastr["error"]('Lütfen Kalem Ekleyiniz!');
            } else {
                buton.disabled = true;
                $.ajax({
                    type: "POST",


                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    url: "/SIPARIS_FIS/datagonder/",
                    data: JSON.stringify({
                        CARIKOD: document.getElementById("CariKodu").dataset.hiddenvalue,
                        FISNO: document.getElementById("FisNo").value,
                        TARIH: (document.getElementById("Tarih").value ),
                        ODEMETARIHI: (document.getElementById("ÖdemeTarihi").value + 'T' + '@DateTime.Now.Hour.ToString("D" + 2)' + ':' + '@DateTime.Now.Minute.ToString("D" + 2)'),
                        NOT: document.getElementById("Not").value,
                        SORUMLULUK_MERKEZI: document.getElementById("Smerkezi").value,
                        gelenhareket: arr,
                        TESLIMYERI: document.getElementById("TeslimYeri").value,
                        TESLIMSURESI: document.getElementById("TeslimSüresi").value,
                        MUHATTAPADI: document.getElementById("MuhattapAdı").value,
                        NAKLIYE: document.getElementById("Nakliye").value,
                        ONAYLANDI: document.getElementById("SIPARIS_ONAYLANDI").value,
                        REDDEDILDI: document.getElementById("SIPARIS_REDDEDILDI").value,
                        REDACIKLAMA: document.getElementById("redacıklama").value,
                        TIPI:@{ if (Model.SIPARIS.TIP == 1)
                        {@: "Giriş"
                                                        }
                        else
                        {
                            if (Model.SIPARIS.TIP == 2)
                            {@: "Çıkış"
                                                            }

                        }
                } }),
                    success: function (result) {
                        if (yazdir == true) {
                            printDiv('printableArea');
                        } else {
                            historysend("/SIPARIS_FIS/SIPARISLISTE");

                        }
                        toastr["success"]("Başarıyla Kayıt Edildi!");

                    },
                    error: function (result) {
                        toastr["error"]('error');
                    }
                });
            }
        }

        function idFormatter() {
            return 'Toplam'
        }

        function nameFormatter(data) {
            return data.length
        }


        function numberformatter(value, row, index) {
            if (!value)
                return "0.00";
            else {
                return [

                    numberWithCommas((Number(value.toString().replace(",", "."))).toFixed(2))
                ].join('');
            }
        }
        function numberWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
        function priceFormatter(data) {
            var field = this.field

            var toplam = data.map(function (row) {
                if (row[field])
                    return +Number(row[field].toString().replace(",", "."))
                else {
                    return +Number("0")
                }
            }).reduce(function (sum, i) {
                return sum + i
            }, 0);
            return numberWithCommas(toplam) + " TL"
        }

        function footerStyle(column) {
            return {
                id: {
                    classes: 'uppercase'
                },
                name: {
                    css: { 'font-weight': 'normal' }
                },
                price: {
                    css: { color: 'red' }
                }
            }[column.field]
        }


    </script>
}