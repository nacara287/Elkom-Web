@using And.ElkomMuhasebe.Core.Model;
@using And.ElkomMuhasebe.Core.Model.Entity.Admin;
@using And.ElkomMuhasebe.Core.Model.Entity.FirmaDB;


@model And.ElkomMuhasebe.UI.WEB.Controllers.BANKAsController.bankamodel

@{
    ViewBag.Title = "Yeni Banka Oluştur";
    Layout = "~/Views/Shared/yeni.cshtml";
}



@using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post,
    new { @id = "postform" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="card">
        <div class="card-body p-3">
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label>Banka Kodu :</label>
                    <div class="input-group">
                        @Html.EditorFor(model => model.BANKA.BANKAKODU, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "Banka Kodu", @aria_label = "Banka Kodu", @aria_describedby = "button-addon2" } })
                        @Html.ValidationMessageFor(model => model.BANKA.BANKAKODU, "", new { @class = "text-danger" })

                        <div class="input-group-append">
                            <button class="btn btn-sm btn-outline-secondary" title="Kod üret" type="button" id="button-addon2"><i class="fas fa-plus"></i></button>
                        </div>
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <label>Banka Adı</label>
                    @Html.EditorFor(model => model.BANKA.BANKAADI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @required = "true" } })
                    @Html.ValidationMessageFor(model => model.BANKA.BANKAADI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Devir Alacak</label>
                    <input id="BANKA_TOPLAMALACAK" name="BANKA.TOPLAMALACAK"  class="form-control col-form-label-sm masklancak"  value="0">
                </div>
                <div class="form-group col-md-4">
                    <label>Devir Borç</label>
                    <input id="BANKA_TOPLAMBORC" name="BANKA.TOPLAMBORC"  class="form-control col-form-label-sm masklancak"  value="0">
                </div>
                <div class="form-group col-md-4">
                    <label>Bakiye</label>
                    <input id="BANKA_BAKIYE" name="BANKA.BAKIYE"  class="form-control masklancak" readonly  value="0">
                </div>
                <div class="form-group col-md-4">
                    <label>Şube :</label>
                    @Html.EditorFor(model => model.BANKA.SUBEADI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.SUBEADI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label for="">Hesap No :</label>
                    @Html.EditorFor(model => model.BANKA.HESAPNO, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.HESAPNO, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Açıklama</label>
                    @Html.EditorFor(model => model.BANKA.ACIKLAMA, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.ACIKLAMA, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>
                        Yetkili Kişi
                    </label>
                    @Html.EditorFor(model => model.BANKA.YETKILI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.YETKILI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Telefon</label>
                    @Html.EditorFor(model => model.BANKA.TELEFON1, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.TELEFON1, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Visa</label>
                    @Html.EditorFor(model => model.BANKA.VISA, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.VISA, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Visa Komisyon Oranı</label>
                    @Html.EditorFor(model => model.BANKA.VISAKOMISYON, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.VISAKOMISYON, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Faiz Oranı</label>
                    @Html.EditorFor(model => model.BANKA.FAIZORANI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.FAIZORANI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Visa Beklenecek Gün Sayısı</label>
                    @Html.EditorFor(model => model.BANKA.VISA_GUN, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.VISA_GUN, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="py-2">
        <button type="button" class="btn btn-sm btn-primary btn-icon-split" onclick="datagonder()">


            <span class="icon text-white-50">
                <i class="fas fa-save"></i>
            </span>
            <span class="text">Kaydet</span>

        </button>
        <a href="/BANKAS/CREATE" class="btn btn-sm btn-secondary btn-icon-split">
            <span class="icon text-white-50">
                <i class="fas fa-power-off"></i>
            </span>
            <span class="text">İptal</span>
        </a>
    </div>

}


@section script{

    <script type="text/javascript" charset="utf-8">
        var textbox = document.getElementById("BANKA_TOPLAMALACAK");
        var textbox2 = document.getElementById("BANKA_TOPLAMBORC");
        var onceki = "BN";
        var carikod = document.getElementById('BANKA_BANKAKODU');
        function datagonder() {
            var form = $('#postform');
            cevir("BANKA_TOPLAMALACAK");
            cevir("BANKA_TOPLAMBORC");
            cevir("BANKA_BAKIYE");
            
            $.ajax({
                type: "POST",
                url: form.attr('action'),
                data: form.serialize()
                ,
                success: function (result) {
                    historysend("/BANKAS/");

                },
                error: function (result) {
                    toastr["error"]('Lütfen Bilgileri Eksik  Ya da Yanlış Girmeyiniz');
                }
            });

        };
    
        $(document).ready(function () {
          
            kodgetir();
        });
        textbox.oninput = function () {
            var s1 = Number(document.getElementById("BANKA_TOPLAMALACAK").value.replaceAll(",", ""));
            var s2 = Number(document.getElementById("BANKA_TOPLAMBORC").value.replaceAll(",", ""));
            var toplam = s2 - s1;
            document.getElementById("BANKA_BAKIYE").value = toplam;
        
   
        }
        textbox2.oninput = function () {
            var s1 = Number(document.getElementById("BANKA_TOPLAMALACAK").value.replaceAll(",", ""));
            var s2 = Number(document.getElementById("BANKA_TOPLAMBORC").value.replaceAll(",", ""));
            var toplam = s2 - s1;
            document.getElementById("BANKA_BAKIYE").value = toplam;
          
        }

        var carikodbutton = document.getElementById('button-addon2');
        carikodbutton.onclick = function () {
            kodgetir();
        }
        function kodgetir() {
            if (!carikod.value) {
                $.ajax({
                    type: "POST",


                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    url: "/BANKAS/kodgetir/",
                    data: JSON.stringify({

                        kod: ""





                    }),
                    success: function (result) {
                        if (carikod.value != onceki) {
                        onceki =result;
                            carikod.value = result;
                        }
                    },
                    error: function (result) {
                        alert('error');
                    }
                });
            }
            else {

                $.ajax({
                    type: "POST",


                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    url: "/BANKAS/kodgetir/",
                    data: JSON.stringify({

                        kod: carikod.value





                    }),
                    success: function (result) {
                        if (carikod.value != onceki) {
                            onceki = result;
                            carikod.value = result;
                        }
                    },
                    error: function (result) {
                        alert('error');
                    }
                });
            }
        }
    </script>
}








