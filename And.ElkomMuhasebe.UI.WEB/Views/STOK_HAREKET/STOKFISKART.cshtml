@model And.ElkomMuhasebe.UI.WEB.Controllers.STOK_HAREKETController.modelimiz

@{
    if (Model.fis.TIP == 1)
    {
        if (Model.fis.ID == 0)
        {
            ViewBag.Title = "Stok Giriş Fişi Oluştur";
        }
        else
        {
            ViewBag.Title = "Stok  Giriş Fişi Kartı";
        }
    }

    else {
        if (Model.fis.ID == 0)
        {
            ViewBag.Title = "Stok Çıkış Fişi Oluştur";
        }
        else
        {
            ViewBag.Title = "Stok  Çıkış Fişi Kartı";
        }


    }
    ViewBag.baslık = "Stok Fişi";
    Layout = "~/Views/Shared/yeni.cshtml";
}

<img id="load" style="display:none" src="@Model.firmalogo">
<div class="card">
    <div class="card-body p-3">
        <div class="form-row">
            @if (Model.fis.ID == 0)
            {
                <div class="form-group col-md-3">
                    <label>Cari Bilgileri</label>
                    <select id="CariKodu" onchange="carikurgetir()" class="form-control  select2bs4" style="width: 100%;">
                        @if (!string.IsNullOrEmpty(Model.carikod))
                        {
                            <option value="@Model.carikod">@Model.cariad</option>
                        }
                    </select>
                </div>
                <div class="form-group col-md-2">
                    <label>Fiş Numarası</label>
                    <input id="FisNo" type="text" class="form-control form-control-sm" placeholder="Fiş Numarası" readonly required="" value="@("STOKFIS"+(Model.STOK_FISs+1).ToString())">
                </div>
                <div class="form-group col-md-2">
                    <label>Fiş Tarihi</label>
                    <input id="Tarih" type="datetime-local" class="form-control form-control-sm" value="@DateTime.Now.Year.ToString("D" + 4)-@DateTime.Now.Month.ToString("D" + 2)-@DateTime.Now.Day.ToString("D" + 2)@Html.Raw("T")@DateTime.Now.Hour.ToString("D" + 2):@DateTime.Now.Minute.ToString("D" + 2)">
                </div>
                <div class="form-group col-md-2">
                    <label>Sorumluluk Merkezi</label>
                    <select id="Smerkezi" class="form-control form-control-sm">
                        @{ if (Model.sORUMLULUK_MERKEZIs != null)
                            {
                                foreach (var item in Model.sORUMLULUK_MERKEZIs)
                                {
                                    <option>@item.ACIKLAMA</option>
                                }
                            }


                        }
                    </select>
                </div>
            }
            else
            {
                <div class="form-group col-md-3">
                    <label>Cari Bilgileri</label>

                    <input id="CariKodu" class="form-control form-control-sm" readonly data-hiddenvalue="@Model.fis.ID" value="@Model.fis.CARI.CARIKOD/@Model.fis.CARI.FIRMAUNVANI">
                </div>
                <div class="form-group col-md-2">
                    <label>Fiş Numarası</label>
                    <input id="FisNo" type="text" class="form-control form-control-sm" readonly placeholder="Fiş Numarası" required="" value="@Model.fis.FISNO">
                </div>
                <div class="form-group col-md-2">
                    <label>Fiş Tarihi</label>
                    <input id="Tarih" type="datetime-local" class="form-control form-control-sm" value="@Model.fis.TARIH.Value.Year.ToString("D" + 4)-@Model.fis.TARIH.Value.Month.ToString("D" + 2)-@Model.fis.TARIH.Value.Day.ToString("D" + 2)@Html.Raw("T")@Model.fis.TARIH.Value.Hour.ToString("D" + 2):@Model.fis.TARIH.Value.Minute.ToString("D" + 2)">
                </div>
                <div class="form-group col-md-2">
                    <label>Sorumluluk Merkezi</label>
                    <select id="Smerkezi" class="form-control">

                        @{ if (Model.sORUMLULUK_MERKEZIs != null)
                            {
                                <option>@Model.fis.S_MERKEZI.ACIKLAMA</option>
                                foreach (var item in Model.sORUMLULUK_MERKEZIs)
                                {
                                    <option>@item.ACIKLAMA</option>
                                }
                            }
                        }
                    </select>
                </div>
            }

            <div class="form-group col-md-3">
                <label>Fiş Notu</label>
                <input id="Not" type="text" class="form-control form-control-sm" placeholder="Not" value="@Model.fis.ACIKLAMA">
            </div>
        </div>
        <!-- Liste -->
        <div class="table-responsive" id="yazdirilcak">
            <table id="bootstrap-table" class="table">
                <thead>
                    <tr>
                        <th data-field="STOKKODU" data-sortable="true">Stok Kodu</th>
                        <th data-field="ACIKLAMA" data-sortable="true">Açıklama<a class="no-print" style="color:transparent;">-----------------------------------------</a></th>
                        <th data-field="MIKTAR" data-sortable="true">Miktar</th>
                        <th data-field="BIRIM" data-sortable="true">Birim</th>
                        <th data-field="TUTAR" data-sortable="true" data-footer-formatter="priceFormatter">Fiyat</th>
                        <th data-field="ISKONTO" data-sortable="true">İsk%</th>
                        <th data-field="PARABIRIMI" data-sortable="true">Para Birimi</th>
                        <th data-field="PARABIRIMIKUR" data-sortable="true">Kuru</th>
                        <th data-field="NETTUTAR" data-sortable="true">Net Tutar</th>
                        <th data-field="DEPO" data-sortable="true">Depo</th>
                        <th data-width="600" data-width-unit="px"></th>
                    </tr>
                    <tr class="no-print" id="clone">
                        <td style="width: 150px;">
                            <input type="text" class="form-control form-control-sm" readonly onclick="stoklistele()" data-toggle="modal" data-hiddenvalue="" data-target="#ModalStokSec" name="Stok" id="Stok" placeholder="StokAdı" onchange="tutargetirrow(this.parentNode.parentNode)">
                        </td>

                        <td style="width: 200px">
                            <input type="text" class="form-control form-control-sm" value="Açıklama" id="Açıklama" onchange="tutargetirrow(this.parentNode.parentNode)">
                        </td>

                        <td id="tdmiktar">
                            <input type="text" class="form-control form-control-sm text-right" name="Mıktar" id="Mıktar" value="0" onchange="tutargetirrow(this.parentNode.parentNode)">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" name="Birim" id="Birim" value="" readonly onchange="tutargetirrow(this.parentNode.parentNode)">

                        </td>

                        <td id="tdfiyat">
                            <input type="text" class="form-control form-control-sm text-right masklancak" value="0.00" name="Tutar" id="Tutar" onchange="tutargetirrow(this.parentNode.parentNode)" placeholder="Fiyat" required="">
                        </td>
                        <td id="tdisk" style="width: 50px">
                            <input type="text" class="form-control form-control-sm text-right" value="0" name="iskonto" id="iskonto" onchange="tutargetirrow(this.parentNode.parentNode)" placeholder="%.." required="">
                        </td>
                        <td style="width: 76px;">
                            <select class="custom-select custom-select-sm" name="ParaBirimi" id="ParaBirimi" onchange="kurgetir()">
                                @{ if (Model.KUR_BASLIKa != null)
                                    {
                                        <option value="1">TRY</option>
                                        foreach (var item in Model.KUR_BASLIKa)
                                        {
                                            <option value="@item.KUR.ToString().Replace(",",".")">@item.KURKODU</option>
                                        }
                                    }
                                }
                            </select>
                        </td>
                        <td  id="tdkur"style="width: 72px;">
                            <input type="text" name="ParaBirimiKuru" id="ParaBirimiKuru" class="form-control form-control-sm text-right" value="1.00" placeholder="Para Kuru" onchange="tutargetirrow(this.parentNode.parentNode)" required="">
                        </td>
                        <td id="count" style="width: 115px;" class="countable">
                            <input type="text" class="form-control form-control-sm text-right " value="0.00" name="NetTutar" id="NetTutar" readonly placeholder="Net Tutar">
                        </td>
                        <td id="depo"  style="width: 115px;">
                            <select class="custom-select custom-select-sm depo" >
                                @foreach (var item in Model.DEPOs)
                                {
                                    <option value="@(item.ID)">@(item.DEPONO + "-" + item.DEPOADI)</option>


                                }

                            </select>
                        </td>
                        <td class="noclone">
                            <button type="button" id="addRowBtn" onclick="butonlistele()" class="btn btn-success btn-sm btn-rounded">
                                <span class="icon text-white-50">
                                    <i class="fas fa-plus"></i>
                                </span>
                            </button>
                        </td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.STOK_FIS_HAREKETs)
                    {
                    <tr>
                        <td style="width: 150px;" data-hiddenvalue="@item.STOKID"><input class="form-control form-control-sm" value="@item.STOK.STOKKODU/@item.STOK.STOKAD" readonly=""> </td>
                        <td style="width: 200px;">   <input type="text" class="form-control form-control-sm" value="@item.ACIKLAMA"></td>
                        <td id="tdmiktar"><input type="text" class="form-control form-control-sm" onchange="tutargetirrow(this)" value="@item.MIKTAR.ToString().Replace(",",".")"></td>
                        <td><input type="text" class="form-control form-control-sm" readonly value="@item.BIRIM"></td>
                        <td id="tdfiyat"><input type="text" class="form-control form-control-sm text-right" onchange="tutargetirrow(this)" value="@item.FIYAT.ToString().Replace(",",".")" required=""></td>
                        <td id="tdisk" style="width: 50px;"><input class="form-control form-control-sm" onchange="tutargetirrow(this)" value="@item.ISK1.ToString().Replace(",",".")"></td>
                        <td style="width: 76px;"> <input type="text" class="form-control form-control-sm text-right" readonly onchange="tutargetirrow(this)" value="@item.PARABIRIMI" required=""></td>
                        <td id="tdkur" style="width: 50px;"><input type="text" class="form-control form-control-sm text-right" onchange="tutargetirrow(this)" value="@item.PARAKUR.ToString().Replace(",",".")" required=""> </td>
                        <td id="count" class="countable" style="width: 115px;"><input type="text" readonly="" value="@item.TOPLAMTUTAR.ToString().Replace(",",".")" class="form-control form-control-sm text-right" aria-describedby="net-tutar"></td>
                        <td id="depo" style="width: 115px;">
                            <select class="custom-select custom-select-sm depo">
                                @foreach (var depo in Model.DEPOs)
                                {
                                    if (item.ID == depo.ID)
                                    {
                                        <option value="@(item.ID)" selected>@(depo.DEPONO + "-" + depo.DEPOADI)</option>

                                    }
                                    <option value="@(depo.ID)" >@(depo.DEPONO + "-" + depo.DEPOADI)</option>


                                }

                            </select>
                        </td>
                        <td class="no-print"> <button type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded noprint">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button></td>
                    </tr>

                    }
                </tbody>
            </table>
        </div>
    </div>
    <!-- Alt toplamlar -->
    <div class="card-footer ">
        <div class="row">
            <div class="col-md-6">
                <p> </p>
                <p></p>
                <p> </p>
            </div>
            <div class="col-md-6">
                <div class="form-group row mb-1">
                    <label for="toplam" class="col-sm-6 text-right col-form-label">Toplam Tutar</label>
                    <div class="col-sm-6">
                        <input type="text" id="toplam" class="form-control text-right form-control-sm" placeholder="0.00" readonly>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<!-- butonlar -->
<div class="py-2">
    <button aria-label="" class="btn btn-primary " onclick="butongonder(this)">
        <span class="icon text-white-50">
            <i class="fas fa-save"></i>
        </span>
        <span class="text">Kaydet</span>
    </button>
    <a aria-label="" class="btn btn-secondary " href="@Url.RequestContext.HttpContext.Request.Url.ToString()" type="reset">
        <span class="icon text-white-50">
            <i class="fas fa-power-off"></i>
        </span>
        <span class="text">İptal</span>
    </a>
</div>


<div class="modal fade" id="ModalStokSec" tabindex="-2" aria-labelledby="ModalStokSecLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalStokSecLabel">Stok Listesi</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="table-responsive" id="yazdirilcak">
                    <table id="stoktablo" class="table-bordered table-sm" data-show-search-clear-button="true"
                           data-show-footer="true" data-footer-style="footerStyle" data-show-print="true"
                           data-single-select="true" data-show-refresh="true" data-icon-size="sm"
                           data-side-pagination="server"
                           data-pagination="true"
                           data-page-size="10"
                           data-page-list="[10, 20, 50, 100, 200, 300]" data-show-export="true" data-reorderable-columns="true">
                        <thead>
                            <tr>
                                <th data-field="state" class="no-print" data-print-ignore="true" data-checkbox="true"></th>
                                <th data-field="ID" data-print-ignore="true" class="text-center" data-visible="false" data-sortable="true" data-footer-formatter="idFormatter">ID</th>

                                <th data-field="STOKODU" data-sortable="true" data-footer-formatter="nameFormatter">Stok Kodu</th>
                                <th data-field="STOKAD" data-sortable="true">Stok İsmi</th>
                                <th data-field="MIKTAR" data-formatter="numberformatter" data-align="right" data-sortable="true">Miktar</th>
                                <th data-field="BIRIM">Birim</th>
                                <th data-field="LISTEFIYAT" data-formatter="numberformatter" data-align="right">Fiyatı</th>
                                <th data-field="PARABIRIMI" data-sortable="true" data-align="right">Paraba Birimi</th>
                                <th data-field="ISKONTO" data-formatter="numberformatter" data-align="right" data-sortable="true">İskonto</th>

                                <th data-field="KDV" data-formatter="numberformatter" data-align="right" data-sortable="true">KDV</th>
                                <th data-field="DEPO" data-sortable="true">Depo</th>

                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table><div id="FaturaCariSecDataTablo_processing" class="dataTables_processing panel panel-default" style="display: none;">İşleniyor...</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-dark" data-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-primary" onclick="butonkasagetir()" data-dismiss="modal">Seç</button>
            </div>
        </div>
    </div>
</div>




@section script{
    <script type="text/javascript">

        $('.select2').select2()



        //Initialize Select2 Elements
        $('.select2bs4').select2({
            theme: 'bootstrap4',
            placeholder: "Cari adı veya kodu ile ara",
            ajax: {
                url: '/CARI_BASLIK/getcarid',
                processResults: function (data) {
                    // Transforms the top-level key of the response object from 'items' to 'results'
                    return {
                        results: data

                    };
                }
                // Additional AJAX parameters go here; see the end of this chapter for the full code of this example
            }
        });
        function carikurgetir() {
            $.ajax({
                type: "POST",

                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: "/CARI_BASLIK/getparabirimi/",
                data: JSON.stringify({
                    kod: document.getElementById("CariKodu").options[document.getElementById("CariKodu").selectedIndex].value
                }),
                success: function (result) {
                    if (result != "TRY") {
                        var sel = document.getElementById("ParaBirimi");

                        var opts = sel.options;
                        for (var opt, j = 0; opt = opts[j]; j++) {
                            if (opt.text == result.parabirimi) {
                                sel.selectedIndex = j;

                            } else {

                            }
                            kurgetir();
                        }
                    } else {
                        var sel = document.getElementById("ParaBirimi");

                        var opts = sel.options;
                        for (var opt, j = 0; opt = opts[j]; j++) {
                            if (opt.text == "TRY") {
                                sel.selectedIndex = j;

                            }
                            opt.disabled = false;


                        }
                        kurgetir();
                    }

                }
                ,
                error: function (result) {
                    toastr["error"]('error');
                }
            });
        }

          var carid=@Model.fis.CARIID;
        var caridg;
        var carikodu;
        var kasaid;
        var kasadg;
        var kasakodu;
        var birim;
        var kasaadı;
     var baslık = "STOK FİŞİ";

        var $table = $('#bootstrap-table');
        var $caritable = $('#caritablo');
        var $stoktable = $('#stoktablo');
        var parakuru;
        $(document).ready(function () {
            yenile();
             @if (Model.print)
               {
                   @:printDiv('printableArea');
               }
        });
        function printDiv(divName) {


            $.ajax({
                type: "POST",


                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: "/CARI_BASLIK/getcariinfo/",
                data: JSON.stringify({
                    kod: document.getElementById("CariKodu").dataset.hiddenvalue


                }),
                success: function (result) {
                    cariadı = result.cari.FIRMAUNVANI;
                    carikodu = result.cari.CARIKOD;
                    cariadresi = result.cari.ISADRES1;
                    caritelefon = result.cari.ISTEL;
                    firmalogo = result.firma.FirmaResimUrl;
                    firmaadres = result.firma.ADRESI1;
                    firmagsm = result.firma.YONETICI_TEL;
                    firmatel = result.firma.TEL;
                    firmafax = result.firma.FAX;
                    var printContents = document.getElementById("yazdirilcak").innerHTML;
                    var originalContents = document.body.innerHTML;
                    var content = "";

                    var FISNO = document.getElementById("FisNo").value;
                    var TARIH = document.getElementById("Tarih").value;
                    var NOT = document.getElementById("Not").value;
                    var toplamtutar = document.getElementById("toplam").value;
                    content += `
           <style>
.vl {
  border-left: 4px solid red;
  height: 130px;
}
</style>
    <div class=" container-fluid">



      <div class="row d-flex justify-content-between align-items-end">

        <div class="col" style="max-width: 50%;">
         <img src="${firmalogo}">



        </div>

      <div class="col" style="max-width: 1%;">
       <div class="vl"></div>
    </div>
      <div class="col" style=" text-align:left">
    <div class="row">   <a>
     ${firmaadres}
    </a> </div>
   <div class="row">  <h5>Gsm:</h5>${firmagsm}</div>
       <div class="row">
     <h5>Tel:</h5> ${firmatel}     </div>
       <div class="row">
     <h5>Fax:</h5>${firmafax}</div>
       <div class="row"></div>

    </div>
    <div class="col">

        <h1 style="color:red"><strong>${baslık}</strong></h1>
    </div>
      </div>

      <hr>

      <div class="row">
        <div class="col-8">
          <table>
            <tbody>
            <tr>
              <td><h2>Cari:</h2> </td>
              <td></td>
              <td><h2 style="color:red">${carikodu + "/" + cariadı}</h2></td>
            </tr>

          </table>
        </div>
        <div class="col-4">
      <table>
            <tbody>
            <tr>
              <td><h3>No:</h3> </td>

              <td><h3 style="color:red">${FISNO}</h3></td>
            </tr>
      <tr>
              <td><h3>Tarih:</h3> </td>

              <td><h3 style="color:red">${TARIH}</h3></td>
            </tr>
          </table>
        </div>
      </div>
`;




                    content += printContents;
                    content += ` <div class="table-responsive">
                <table class="table table-striped table-sm" >

                    <tfoot>
                        <tr style="border-top: solid;">
                            <td></td>
                            <td></td>
                            <td></td>
                            <th class="text-right" scope="row" >Toplam:</th>
                            <th class="text-right" scope="row" >${toplamtutar}</th>
                            <th colspan="2" ></th>
                        </tr>


                    </tfoot>
                    <caption></caption>
        </table >
       </div>
    </div>
   `;
                    document.body.innerHTML = content;
                    window.print();

                    document.body.innerHTML = originalContents;
                    historysend("/CARI_HAREKET/CARIFISLISTE");

                },
                error: function (result) {
                    toastr["error"]('error');
                }
            });

        }
        function pad(d) {
            return (d < 10) ? '0' + d.toString() : d.toString();
        }
        Date.prototype.formatMM = function () {
            return (pad(this.getDate()) + "/" + pad(this.getMonth() + 1) +

                "/" + this.getFullYear());
        }
                function get_query_paramsstok(p) {

            var date = new Date("2000-01-01");
            var dateson = new Date("2080-01-01");


            var arr = [{ verismi: "TARIH", deger: date.formatMMDDYYYY(), deger2: dateson.formatMMDDYYYY(), filtretipi: 4 }];


            if (p.sort != null) {
                return {

                    extraParam: 'abc',

                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,
                    search: "",
                    sort: p.sort,

                    carid: carid,
                    kdvdahildegil: true,
                     TIPI:  @if (Model.fis.TIP==1) { @:0
                }else
                    {@:1

                    }

    ,

                    filterler: null
                }
            } else {
                return {
                    extraParam: 'abc',
                    search: p.search,
                    sort: p.sort,
                    order: p.order,
                    limit: p.limit,
                    offset: p.offset,
                    kdvdahildegil: true,
                    sort: "ID",

                    carid: carid,

                                         TIPI:  @if (Model.fis.TIP==1) { @:0
                }else
                    {@:1

                    }

    ,




                    filterler: arr
                }

            }
        }

        function kurgetir() {
                var e = document.getElementById("ParaBirimi");
            document.getElementById("ParaBirimiKuru").value = e.options[e.selectedIndex].value;
            var tutar = parseFloat(document.getElementById("Mıktar").value) * parseFloat(document.getElementById("Tutar").value) * parseFloat(document.getElementById("ParaBirimiKuru").value);
            document.getElementById("NetTutar").value = tutar - (parseFloat(tutar) * parseFloat(document.getElementById('iskonto').value) / 100);
        }
     
        function tutargetirrow(rowid) {
            var childs = rowid.childNodes;

            var fiyat = 0;
            var miktar = 0;
            var isk = 0;
            var kur = 0;
            var nettutar = null;
            for (var i = 0; i < childs.length; i++) {
                if (childs[i].id == "tdfiyat") {

                    fiyat = parseFloat(childs[i].firstElementChild.value.replaceAll(",", ""))
                }
                if (childs[i].id == "tdmiktar") {
                    miktar = parseFloat(childs[i].firstElementChild.value)
                }
                if (childs[i].id == "tdisk") {
                    isk = parseFloat(childs[i].firstElementChild.value)
                }
                if (childs[i].id == "tdkur") {
                    kur = parseFloat(childs[i].firstElementChild.value.replaceAll(",", ""))
                }
                if (childs[i].id == "count") {
                    nettutar = childs[i].firstElementChild;
                }
            }

            var tutar = fiyat * miktar * kur;

            nettutar.value = tutar - (parseFloat(tutar) * isk / 100);


            rowid.value = numberformatter(rowid.value);
            yenile();
        }

        function butoncarigetir() {

            carid = caridg;
            document.getElementById("CariKodu").value = carikodu;
            document.getElementById("ModalCariSec").style.display = "none";
            var sel = document.getElementById("ParaBirimi");
              var opts = sel.options;
            for (var opt, j = 0; opt = opts[j]; j++) {
                if (opt.text == parakuru) {
      sel.selectedIndex = j;
      break;
                }

            }
                kurgetir();

        }
        function stoklistele() {
            if (document.getElementById("CariKodu").options[document.getElementById("CariKodu").selectedIndex].value != null)
                carid = document.getElementById("CariKodu").options[document.getElementById("CariKodu").selectedIndex].value;
            else
            carid = 0

        }
        function butonkasagetir() {

            kasaid = kasadg;
            document.getElementById("Stok").dataset.hiddenvalue = kasakodu;
            document.getElementById("Stok").value = kasakodu + "/" + kasaadı;


            document.getElementById("ModalStokSec").style.display = "none";
            document.getElementById("Açıklama").focus();


        }

        $().ready(function () {




   $stoktable.bootstrapTable({

                type: "POST",
                url: "/STOK_Hareket/stokgetir",
                method: 'post',
                contentType: 'application/x-www-form-urlencoded',
                queryParams: get_query_paramsstok,
                       printPageBuilder: function (table) {
        return `
<html>
  <head>
  <style type="text/css" media="print">
  page {
    size: auto;
    margin: 25px 0 25px 0;
  }
  </style>
  <style type="text/css" media="all">
  table {
    border-collapse: collapse;
    font-size: 12px;
  }
  table, th, td {
    border: 1px solid grey;
  }
  th, td {
    text-align: center;
    vertical-align: middle;
  }
  p {
    font-weight: bold;
    margin-left:20px;
  }
  table {
    width:94%;
    margin-left:3%;
    margin-right:3%;
  }
  div.bs-table-print {
    text-align:center;
  }
    h1.bs-table-print {
    text-align:center;
  }
  </style>
    <title>@Session["FirmaAdı"]</title>
     </head>
  <body>

     <h1 class="bs-table-print">Stok Listesi</h1>

  <div class="bs-table-print">${table}</div>
  </body>
</html>`
      },
                clickToSelect: true,
                showRefresh: true,

                search: true,
                showToggle: true,
                showColumns: true,

                searchAlign: 'left',

                locale: 'tr-TR',
                formatShowingRows: function (pageFrom, pageTo, totalRows) {
                    return "Toplam " + totalRows+" Kayıt";
                },
                formatRecordsPerPage: function (pageNumber) {
                    return pageNumber + " Adet Listeleniyor";
                },

            });
            $stoktable.on('check.bs.table', function (e, row, $element) {
                kasaidg = row.ID;
                kasakodu = row.ID;
                kasaadı = row.STOKODU + "/" + row.STOKAD;
                document.getElementById("Tutar").value = row.LISTEFIYAT;
                if (row.ISKONTO != null && row.ISKONTO != "")
                    document.getElementById("iskonto").value = row.ISKONTO;
                else
                    document.getElementById("iskonto").value = 0;


                document.getElementById("Birim").value = row.BIRIM;

                setTimeout(function () { $('#Mıktar').focus() }, 800);
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }
            });
            $stoktable.on('click-row.bs.table', function (e, row, $element) {
                kasaidg = row.ID;
                kasakodu = row.ID;
                kasaadı = row.STOKODU + "/" + row.STOKAD;
                document.getElementById("Tutar").value = row.LISTEFIYAT;
                if (row.ISKONTO != null && row.ISKONTO != "")
                    document.getElementById("iskonto").value = row.ISKONTO;
                else
                    document.getElementById("iskonto").value = 0;

                document.getElementById("Birim").value = row.BIRIM;

                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }
            });
            $stoktable.on('dbl-click-row.bs.table', function (e, row, $element) {
                kasaidg = row.ID;

                if (row.ISKONTO != null && row.ISKONTO != "")
                    document.getElementById("iskonto").value = row.ISKONTO;
                else
                    document.getElementById("iskonto").value = 0;

                document.getElementById("Birim").value = row.BIRIM;

                document.getElementById("Stok").dataset.hiddenvalue = row.ID;
                document.getElementById("Stok").value = row.STOKODU + "/" + row.STOKAD;
                if (row.TUTAR != null && row.TUTAR != "")
                    document.getElementById("Tutar").value = row.LISTEFIYAT;
                else
                    document.getElementById("Tutar").value = 0;
                if (row.KDVFIYATADAHIL == "Hayır")
                    kdv = row.KDV;
                else {
                    kdv = 0;
                }

                $('#ModalStokSec').modal('hide');

                setTimeout(function () { $('#Mıktar').focus() }, 800);
            });

            //activate the tooltips after the data table is initialized
            $('[rel="tooltip"]').tooltip();

            $(window).resize(function () {
                $stoktable.bootstrapTable('resetView');
            });


        })

        function butonlistele(row) {



            if (document.getElementById('Stok').value == "" || document.getElementById('Stok').value == null)
                toastr["error"]("Lütfen Mal/Hizmet Giriniz!");
            else
                if (parseFloat(document.getElementById('NetTutar').value.replaceAll(",", "")) == 0) {
                    toastr["error"]("Lütfen Tutar Giriniz!");
                } else {

                    var $btn = $('#clone');
                    //use .closest() to navigate from the buttno to the closest row and clone it
                    var $clonedRow = $btn.clone();
                    $clonedRow.attr("id", "");
                    $clonedRow.children().last().empty();
                    $clonedRow.children().last().append('<button  type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button>');

                    var depo = $clonedRow.get(0).getElementsByClassName("depo")[0];
                    //append the cloned row to end of the table


                    depo.selectedIndex = document.getElementsByClassName("depo")[0].selectedIndex;



                    /*  if (senaryo != "IHRACAT") {
                          if (tip != "TEVKIFAT")
                              $table.append('<tr data-index="0"><td data-gelirstok="' + document.getElementById("Stok").dataset.gelirstok + '" data-hidden="' + document.getElementById('Stok').dataset.hiddenvalue + '"><input class="form-control" value="' + document.getElementById('Stok').value + '" readonly></td><td><input class="form-control" value="' + document.getElementById('Mıktar').value + '"></td><td><input class="form-control" value="' + document.getElementById('Birim').value + '" readonly></td><td><input class="form-control" value="' + document.getElementById('Tutar').value + '"></td><td><input class="form-control" value="' + document.getElementById('iskonto').value + '"></td><td class="countableiskonto"><input class="form-control" value="' + document.getElementById('iskontotutar').value + '"></td><td class="countablekdvoran"><input class="form-control" value="' + document.getElementById('KDVOranı').value + '" readonly></td><td class="countablekdv"><input class="form-control" value="' + document.getElementById('KDVTutar').value + '"></td></td><td class="countable"><input class="form-control" value="' + document.getElementById('Toplam').value + '"></td><td> <button  type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button></td></tr>');
                          if (tip == "TEVKIFAT")
                              $table.append('<tr data-index="0"><td data-gelirstok="' + document.getElementById("Stok").dataset.gelirstok + '" data-hidden="' + document.getElementById('Stok').dataset.hiddenvalue + '">' + document.getElementById('Stok').value + '</td><td>' + document.getElementById('Mıktar').value + '</td><td>' + document.getElementById('Birim').value + '</td><td>' + document.getElementById('Tutar').value + '</td><td>' + document.getElementById('iskonto').value + '</td><td class="countableiskonto">' + document.getElementById('iskontotutar').value + '</td><td class="countablekdvoran">' + document.getElementById('KDVOranı').value + '</td><td class="countablekdv">' + document.getElementById('KDVTutar').value + '</td><td >' + document.getElementById('tevfikatkodu').options[document.getElementById('tevfikatkodu').selectedIndex].innerHTML + '</td><td class="countabletevfikatoran">' + document.getElementById('tevfikatoran').value + '</td><td class="countabletevfikat">' + document.getElementById('tevfikattutar').value + '</td><td class="countable">' + document.getElementById('Toplam').value + '</td><td> <button  type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button></td></tr>');
                      } else {
                          $table.append('<tr data-index="0"><td data-gelirstok="' + document.getElementById("Stok").dataset.gelirstok + '" data-hidden="' + document.getElementById('Stok').dataset.hiddenvalue + '"><input class="form-control" value="' + document.getElementById('Stok').value + '" readonly></td><td>' + document.getElementById('Mıktar').value + '</td><td>' + document.getElementById('Birim').value + '</td><td>' + document.getElementById('Tutar').value + '</td><td>' + document.getElementById('iskonto').value + '</td><td class="countableiskonto">' + document.getElementById('iskontotutar').value + '</td><td class="countablekdvoran">' + document.getElementById('KDVOranı').value + '</td><td class="countablekdv">' + document.getElementById('KDVTutar').value + '</td><td >' + document.getElementById('teslimsartıkodu').options[document.getElementById('teslimsartıkodu').selectedIndex].innerHTML + '</td><td >' + document.getElementById('GTIPNO').value + '</td><td>' + document.getElementById('esyanıngonderimsekli').options[document.getElementById('esyanıngonderimsekli').selectedIndex].innerHTML + '</td><td>' + document.getElementById('esyanınbulundugukabıncinsi').options[document.getElementById('esyanınbulundugukabıncinsi').selectedIndex].innerHTML + '</td><td>' + document.getElementById('kapadet').value + '</td><td class="countable">' + document.getElementById('Toplam').value + '</td><td> <button  type="button" id="deleteRowBtn" onclick="deleteRow(this)" class="btn btn-danger btn-sm btn-rounded">  <span class="icon text-white-50">    <i class="fas fa-trash-alt"></i> </span></button></td></tr>');
                      }*/

                    $table.append($clonedRow);
                    document.getElementById("Açıklama").value = "";
                    document.getElementById("Mıktar").value = "";
                    document.getElementById("Birim").value = "";
                    document.getElementById("iskonto").value = "";
                    document.getElementById("NetTutar").value = "";
                    $('#ModalStokSec').modal('show');
                    yenile();
                }



            }









        function yenile() {maskla();
            var sum = 0;

            var table = document.getElementById("bootstrap-table");

            var tds = table.getElementsByClassName('countable');

            for (var i = 1; i < tds.length; i++) {

                var text = tds[i].firstElementChild.value.toString().replaceAll(/,/g, '')
                sum += isNaN(text) ? 0 : parseFloat(text);
            }

            document.getElementById("toplam").value = numberformatter(sum);


        }
        function deleteRow(btn) {
  var row = btn.parentNode.parentNode;
            row.parentNode.removeChild(row);
                yenile();
}
        function butongonder(buton) {

            var arr = [];


            var oTable = document.getElementById('bootstrap-table');

            //gets rows of table
            var rowLength = oTable.rows.length;

            //loops through rows
            for (i = 2; i < rowLength; i++) {

                //gets cells of current row
                var oCells = oTable.rows.item(i).cells;

                //gets amount of cells of current row
                var cellLength = oCells.length;

                //loops through each cell in current row
                for (var j = 0; j < cellLength; j++) {

                    // get your cell info here

                    var cellVal = oCells.item(j).innerHTML;
                    var cellVal = oCells.item(j).innerHTML;

                    var Stoka;
                    var Miktar;
                    var Birim;
                    var Acıklama;

                    var Tutar;
                    var İskonto;
                    var Parabirimi;
                    var Parabirimi;
                    var Parakuru;
                    var NetTutar;
                    var Depo;
                    if (j == 0)
                        Stoka = parseFloat(oCells.item(j).firstElementChild.dataset.hiddenvalue);
                    if (j == 1)
                        Acıklama = oCells.item(j).firstElementChild.value;
                    if (j == 2)
                        Miktar = oCells.item(j).firstElementChild.value;
                    if (j == 3)
                        Birim = oCells.item(j).firstElementChild.value;
                    if (j == 4)
                        Tutar = oCells.item(j).firstElementChild.value;
                    if (j == 5)
                        İskonto = oCells.item(j).firstElementChild.value;
                    if (j == 6)
                        Parabirimi = oCells.item(j).firstElementChild.value;
                    if (j == 7)
                        Parakuru = oCells.item(j).firstElementChild.value;
                    if (j == 8)
                        NetTutar = oCells.item(j).firstElementChild.value;
                    if (j == 9)
                        Depo = oCells.item(j).firstElementChild.options[oCells.item(j).firstElementChild.selectedIndex].value;



                }
                arr.push({ STOKID: Stoka, ACIKLAMA: Acıklama, MIKTAR: Miktar, BIRIM: Birim, FIYAT: Tutar, ISKONTO: İskonto, PARABIRIMI: Parabirimi, PARABIRIMIKUR: Parakuru, NETTUTAR: NetTutar,DEPOID:Depo });
            }

            if (arr.length == 0) {
                toastr["error"]('Lütfen Kalem Ekleyiniz!');
            } else {
                buton.disabled = true;
                $.ajax({
                    type: "POST",


                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    url: "/Stok_Hareket/datagonder/",
                    data: JSON.stringify({
                               @if (Model.fis.ID == 0){


@:   CARIID: document.getElementById("CariKodu").options[document.getElementById("CariKodu").selectedIndex].value,


        }
    else
    {
@: CARIID: document.getElementById("CariKodu").dataset.hiddenvalue,
    }
                        FISNO: document.getElementById("FisNo").value,
                        TARIH: (document.getElementById("Tarih").value ),
                        NOT: document.getElementById("Not").value,
                        SORUMLULUK_MERKEZI: document.getElementById("Smerkezi").value,
                        gelenhareket: arr,
                        TIPI:  @if (Model.fis.TIP==1) { @:"Giriş"
                }else
                    {@:"Çıkış"

                    }

                       })
                    ,
                    success: function (result) {
                        historysend("/Stok_Hareket/STOKFISLISTE");
                        toastr["success"]("Başarıyla Kayıt Edildi!");
                        buton.disabled = false;
                    },
                    error: function (result) {
                        toastr["error"]('Lütfen Bilgileri Eksik  Ya da Yanlış Girmeyiniz');
                        buton.disabled = false;
                    }
                });
            }
        }

        function idFormatter() {
            return 'Toplam'
        }

        function nameFormatter(data) {
            return data.length
        }


        function numberformatter(value, row, index) {
            if (!value)
                return "0.00";
            else {
                return [

                    numberWithCommas((Number(value.toString().replace(",", "."))).toFixed(2))
                ].join('');
            }
        }
        function numberWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
        function priceFormatter(data) {
            var field = this.field

            var toplam = data.map(function (row) {
                if (row[field])
                    return +Number(row[field].toString().replace(",", "."))
                else {
                    return +Number("0")
                }
            }).reduce(function (sum, i) {
                return sum + i
            }, 0);
            return numberWithCommas(toplam) + " TL"
        }


        function footerStyle(column) {
            return {
                id: {
                    classes: 'uppercase'
                },
                name: {
                    css: { 'font-weight': 'normal' }
                },
                price: {
                    css: { color: 'red' }
                }
            }[column.field]
        }


    </script>
}


