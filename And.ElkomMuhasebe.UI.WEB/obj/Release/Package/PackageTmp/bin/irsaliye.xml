<?xml version="1.0" encoding="utf-8"?>
<DespatchAdvice xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:n4="http://www.altova.com/samplexml/other-namespace" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns="urn:oasis:names:specification:ubl:schema:xsd:DespatchAdvice-2">
  <ext:UBLExtensions>
    <ext:UBLExtension>
      <ext:ExtensionContent>
        <auto-generated-wildcard />
      </ext:ExtensionContent>
    </ext:UBLExtension>
  </ext:UBLExtensions>
  <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
  <cbc:CustomizationID>TR1.2</cbc:CustomizationID>
  <cbc:ProfileID>TEMELIRSALIYE</cbc:ProfileID>
  <cbc:ID />
  <cbc:CopyIndicator>false</cbc:CopyIndicator>
  <cbc:UUID>185AB9A7-D879-4264-AB08-FCD7F3BB8FAT</cbc:UUID>
  <cbc:IssueDate>2019-11-12</cbc:IssueDate>
  <cbc:IssueTime>13:07:45</cbc:IssueTime>
  <cbc:DespatchAdviceTypeCode>SEVK</cbc:DespatchAdviceTypeCode>
  <cac:OrderReference>
    <cbc:ID>sipno</cbc:ID>
    <cbc:IssueDate>2019-12-15</cbc:IssueDate>
  </cac:OrderReference>
  <cac:AdditionalDocumentReference>
    <cbc:ID>9EAA7635-5784-4E99-9CFA-C6FC30119FB6</cbc:ID>
    <cbc:IssueDate>2019-12-15</cbc:IssueDate>
    <cbc:DocumentType>Xslt</cbc:DocumentType>
    <cac:Attachment>
      <cbc:EmbeddedDocumentBinaryObject mimeCode="application/xml" encodingCode="Base64" characterSetCode="UTF-8" filename=".xslt"></cbc:EmbeddedDocumentBinaryObject>
    </cac:Attachment>
  </cac:AdditionalDocumentReference>
  <cac:Signature>
    <cbc:ID schemeID="VKN_TCKN">4620553774</cbc:ID>
    <cac:SignatoryParty>
      <cbc:WebsiteURI>http://www.hizliteknoloji.com.tr</cbc:WebsiteURI>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">4620553774</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyIdentification>
        <cbc:ID schemeID="TICARETSICILNO">76658</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyIdentification>
        <cbc:ID schemeID="MERSISNO">0462055377400001</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>HIZLI BİLİŞİM TEKNOLOJİLERİ ANONİM ŞİRKETİ</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>Yurt Mah. Kasım Ener Bulvarı Kelebek Apt. No:3/1</cbc:StreetName>
        <cbc:BuildingName>
        </cbc:BuildingName>
        <cbc:CitySubdivisionName>ÇUKUROVA</cbc:CitySubdivisionName>
        <cbc:CityName>ADANA</cbc:CityName>
        <cac:Country>
          <cbc:Name>TURKIYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PhysicalLocation>
        <cbc:ID>Depo Şube</cbc:ID>
        <cac:Address>
          <cbc:ID>1234567895</cbc:ID>
          <cbc:StreetName>Ihlamur Mahallesi Selvi Caddesi Sedir Sokak</cbc:StreetName>
          <cbc:CitySubdivisionName>İLÇE</cbc:CitySubdivisionName>
          <cbc:CityName>İL</cbc:CityName>
          <cbc:PostalZone>34100</cbc:PostalZone>
          <cac:Country>
            <cbc:Name>Türkiye</cbc:Name>
          </cac:Country>
        </cac:Address>
      </cac:PhysicalLocation>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>Ziyapaşa </cbc:Name>
          <cbc:TaxTypeCode>Ziyapaşa </cbc:TaxTypeCode>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone>0850 259 9080</cbc:Telephone>
        <cbc:Telefax>0850 259 9080</cbc:Telefax>
        <cbc:ElectronicMail>info@hizliteknoloji.com.tr</cbc:ElectronicMail>
      </cac:Contact>
    </cac:SignatoryParty>
    <cac:DigitalSignatureAttachment>
      <cac:ExternalReference>
        <cbc:URI>#Signature_1FC9C031-34AF-4BEF-941C-199EC9560B21</cbc:URI>
      </cac:ExternalReference>
    </cac:DigitalSignatureAttachment>
  </cac:Signature>
  <cac:DespatchSupplierParty>
    <cac:Party>
      <cbc:WebsiteURI>http://www.hizliteknoloji.com.tr</cbc:WebsiteURI>
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">4620553774</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyIdentification>
        <cbc:ID schemeID="TICARETSICILNO">76658</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyIdentification>
        <cbc:ID schemeID="MERSISNO">0462055377400001</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>HIZLI BİLİŞİM TEKNOLOJİLERİ ANONİM ŞİRKETİ</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:StreetName>Yurt Mah. Kasım Ener Bulvarı Kelebek Apt. No:3/1</cbc:StreetName>
        <cbc:BuildingName>
        </cbc:BuildingName>
        <cbc:CitySubdivisionName>ÇUKUROVA</cbc:CitySubdivisionName>
        <cbc:CityName>ADANA</cbc:CityName>
        <cac:Country>
          <cbc:Name>TURKIYE</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PhysicalLocation>
        <cbc:ID>Depo Şube</cbc:ID>
        <cac:Address>
          <cbc:ID>1234567895</cbc:ID>
          <cbc:StreetName>Ihlamur Mahallesi Selvi Caddesi Sedir Sokak</cbc:StreetName>
          <cbc:CitySubdivisionName>İLÇE</cbc:CitySubdivisionName>
          <cbc:CityName>İL</cbc:CityName>
          <cbc:PostalZone>34100</cbc:PostalZone>
          <cac:Country>
            <cbc:Name>Türkiye</cbc:Name>
          </cac:Country>
        </cac:Address>
      </cac:PhysicalLocation>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>Ziyapaşa </cbc:Name>
          <cbc:TaxTypeCode>Ziyapaşa </cbc:TaxTypeCode>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone>0850 259 9080</cbc:Telephone>
        <cbc:Telefax>0850 259 9080</cbc:Telefax>
        <cbc:ElectronicMail>info@hizliteknoloji.com.tr</cbc:ElectronicMail>
      </cac:Contact>
    </cac:Party>
    <cac:DespatchContact>
      <cbc:Name>ad soyad</cbc:Name>
    </cac:DespatchContact>
  </cac:DespatchSupplierParty>
  <cac:DeliveryCustomerParty>
    <cac:Party>
      <cbc:WebsiteURI />
      <cac:PartyIdentification>
        <cbc:ID schemeID="VKN">1234567890</cbc:ID>
      </cac:PartyIdentification>
      <cac:PartyName>
        <cbc:Name>DENEME FİRMA A.Ş</cbc:Name>
      </cac:PartyName>
      <cac:PostalAddress>
        <cbc:Room />
        <cbc:StreetName>SDFDSF </cbc:StreetName>
        <cbc:BuildingName />
        <cbc:BuildingNumber />
        <cbc:CitySubdivisionName>SDF</cbc:CitySubdivisionName>
        <cbc:CityName>SDF</cbc:CityName>
        <cbc:PostalZone />
        <cac:Country>
          <cbc:Name>SDF</cbc:Name>
        </cac:Country>
      </cac:PostalAddress>
      <cac:PartyTaxScheme>
        <cac:TaxScheme>
          <cbc:Name>SDFSDF</cbc:Name>
        </cac:TaxScheme>
      </cac:PartyTaxScheme>
      <cac:Contact>
        <cbc:Telephone />
        <cbc:Telefax />
        <cbc:ElectronicMail />
      </cac:Contact>
    </cac:Party>
  </cac:DeliveryCustomerParty>
  <cac:Shipment>
    <cbc:ID />
    <cac:GoodsItem>
      <cbc:ValueAmount currencyID="TRY">100</cbc:ValueAmount>
    </cac:GoodsItem>
    <cac:ShipmentStage>
      <cac:TransportMeans>
        <cac:RoadTransport>
          <cbc:LicensePlateID schemeID="PLAKA">11313</cbc:LicensePlateID>
        </cac:RoadTransport>
      </cac:TransportMeans>
      <cac:DriverPerson>
        <cbc:FirstName>sdfs</cbc:FirstName>
        <cbc:FamilyName>sdf</cbc:FamilyName>
        <cbc:Title>sdfs sdf</cbc:Title>
        <cbc:NationalityID>13267243738</cbc:NationalityID>
      </cac:DriverPerson>
    </cac:ShipmentStage>
    <cac:Delivery>
      <cac:CarrierParty>
        <cac:PartyIdentification>
          <cbc:ID schemeID="VKN">1234567890</cbc:ID>
        </cac:PartyIdentification>
        <cac:PartyName>
          <cbc:Name>taşıyıcı</cbc:Name>
        </cac:PartyName>
        <cac:PostalAddress>
          <cbc:StreetName>SDFSFS </cbc:StreetName>
          <cbc:CitySubdivisionName>SDF</cbc:CitySubdivisionName>
          <cbc:CityName>SDF</cbc:CityName>
          <cac:Country>
            <cbc:Name>SDFD</cbc:Name>
          </cac:Country>
        </cac:PostalAddress>
      </cac:CarrierParty>
      <cac:Despatch>
        <cbc:ActualDespatchDate>2019-12-15</cbc:ActualDespatchDate>
        <cbc:ActualDespatchTime>13:07:45</cbc:ActualDespatchTime>
      </cac:Despatch>
    </cac:Delivery>
    <cac:TransportHandlingUnit>
      <cac:TransportEquipment>
        <cbc:ID schemeID="DORSEPLAKA">313213213</cbc:ID>
      </cac:TransportEquipment>
    </cac:TransportHandlingUnit>
  </cac:Shipment>
  <cac:DespatchLine>
    <cbc:ID>1</cbc:ID>
    <cbc:DeliveredQuantity unitCode="C62">1</cbc:DeliveredQuantity>
    <cac:OrderLineReference>
      <cbc:LineID>1</cbc:LineID>
    </cac:OrderLineReference>
    <cac:Item>
      <cbc:Name>AÇIKLAMA</cbc:Name>
    </cac:Item>
    <cac:Shipment>
      <cbc:ID>1</cbc:ID>
      <cac:GoodsItem>
        <cac:InvoiceLine>
          <cbc:ID>1</cbc:ID>
          <cbc:InvoicedQuantity>1</cbc:InvoicedQuantity>
          <cbc:LineExtensionAmount>100</cbc:LineExtensionAmount>
          <cac:Item>
            <cbc:Name>AÇIKLAMA</cbc:Name>
          </cac:Item>
          <cac:Price>
            <cbc:PriceAmount>100</cbc:PriceAmount>
          </cac:Price>
        </cac:InvoiceLine>
      </cac:GoodsItem>
    </cac:Shipment>
  </cac:DespatchLine>
</DespatchAdvice>