@using And.ElkomMuhasebe.Core.Model;
@using And.ElkomMuhasebe.Core.Model.Entity.Admin;
@using And.ElkomMuhasebe.Core.Model.Entity.FirmaDB;


@model And.ElkomMuhasebe.UI.WEB.Controllers.BANKAsController.bankamodel

@{
    ViewBag.Title = "Banka Kartı";
    Layout = "~/Views/Shared/yeni.cshtml";
}



@using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post,
    new { @id = "postform" }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.BANKA.ID)
    @Html.HiddenFor(model => model.BANKA.BAKIYE)
    @Html.HiddenFor(model => model.BANKA.TOPLAMALACAK)
    @Html.HiddenFor(model => model.BANKA.TOPLAMBORC)
    @Html.HiddenFor(model => model.BANKA.CreateUserID)
    @Html.HiddenFor(model => model.BANKA.CreateDate)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="card">
        <div class="card-body p-3">
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label>Banka Kodu</label>
                    @Html.EditorFor(model => model.BANKA.BANKAKODU, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "Banka Kodu", @aria_label = "Banka Kodu", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.BANKAKODU, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Banka Adı</label>
                    @Html.EditorFor(model => model.BANKA.BANKAADI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "..." } })
                    @Html.ValidationMessageFor(model => model.BANKA.BANKAADI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Şube</label>
                    @Html.EditorFor(model => model.BANKA.SUBEADI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.SUBEADI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Hesap No</label>
                    @Html.EditorFor(model => model.BANKA.HESAPNO, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.HESAPNO, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Açıklama</label>
                    @Html.EditorFor(model => model.BANKA.ACIKLAMA, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.ACIKLAMA, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Yetkili Kişi</label>
                    @Html.EditorFor(model => model.BANKA.YETKILI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.YETKILI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Telefon</label>
                    @Html.EditorFor(model => model.BANKA.TELEFON1, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.TELEFON1, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Telefon</label>
                    @Html.EditorFor(model => model.BANKA.TELEFON1, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.TELEFON1, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Visa</label>
                    @Html.EditorFor(model => model.BANKA.VISA, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.VISA, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Visa Komisyon Oranı</label>
                    @Html.EditorFor(model => model.BANKA.VISAKOMISYON, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.VISAKOMISYON, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Faiz Oranı</label>
                    @Html.EditorFor(model => model.BANKA.FAIZORANI, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.FAIZORANI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    <label>Visa Beklenecek Gün Sayısı</label>
                    @Html.EditorFor(model => model.BANKA.VISA_GUN, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "...", @aria_label = "...", @aria_describedby = "button-addon2" } })
                    @Html.ValidationMessageFor(model => model.BANKA.VISA_GUN, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <!-- Butonlar -->
<div class="py-2">
    <button type="button" class="btn btn-sm btn-primary btn-icon-split" onclick="datagonder()">


        <span class="icon text-white-50">
            <i class="fas fa-save"></i>
        </span>
        <span class="text">Kaydet</span>

    </button>
    <a href="@Url.RequestContext.HttpContext.Request.Url.ToString()" class="btn btn-sm btn-secondary btn-icon-split">
        <span class="icon text-white-50">
            <i class="fas fa-power-off"></i>
        </span>
        <span class="text">İptal</span>
    </a>
</div>


}



@section script{

    <script type="text/javascript" charset="utf-8">


        var carikod = document.getElementById('BANKA_BANKAKODU');
        var textbox = document.getElementById("BANKA_TOPLAMALACAK");
        var textbox2 = document.getElementById("BANKA_TOPLAMBORC");


        function datagonder() {
            var form = $('#postform');

            $.ajax({
                type: "POST",
                url: form.attr('action'),
                data: form.serialize()
                ,
                success: function (result) {
                    historysend("/BANKAS/");

                },
                error: function (result) {
                    toastr["error"]('Lütfen Bilgileri Eksik  Ya da Yanlış Girmeyiniz');
                }
            });

        };
        textbox.oninput = function () {
            var s1 = Number(document.getElementById("BANKA_TOPLAMALACAK").value);
            var s2 = Number(document.getElementById("BANKA_TOPLAMBORC").value);
            var toplam = s2 - s1;
            document.getElementById("BANKA_BAKIYE").value = toplam;
            document.getElementById("bakiyetext").innerHTML = toplam;
            document.getElementById("alacaktext").innerHTML = s1;
        }
        textbox2.oninput = function () {
            var s1 = Number(document.getElementById("BANKA_TOPLAMALACAK").value);
            var s2 = Number(document.getElementById("BANKA_TOPLAMBORC").value);
            var toplam = s2 - s1;
            document.getElementById("BANKA_BAKIYE").value = toplam;
            document.getElementById("bakiyetext").innerHTML = toplam;
            document.getElementById("borctext").innerHTML = s2;
        }

    var carikodbutton = document.getElementById('button-addon2');
    carikodbutton.onclick = function () {
    if (!carikod.value) {
    @{ int kodnumarası;
        kodnumarası = 1;
        if (Model.BANKAs != null)
        {
            foreach (var item in Model.BANKAs)
            {
                if (item.BANKAKODU.Contains("BNK"))
                {
                    kodnumarası += 1;
                }

            }


            string kod;
            kod = "BNK";

            kod = "BNK" + kodnumarası.ToString();


            @:carikod.value = "@Html.Raw(kod)";


        }
    }
    } else {
    var kod=0;
    var cari=new Array();;
    @{if (Model.BANKAs != null)
        {
            foreach (var item in Model.BANKAs)
            {
                @:cari[@item.ID]="@item.BANKAKODU";

            }
        }
    }
    cari.forEach(myFunction);

    function myFunction(item, index) {
    if (item.includes(carikod.value))
    kod += 1;
    }
    carikod.value = carikod.value + kod;
    }
    }
    </script>
}








