<Invoice xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xsi:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2 UBL-Invoice-2.1.xsd" xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"><ext:UBLExtensions><ext:UBLExtension><ext:ExtensionContent><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#" Id="Signature_IAD2022030121431">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" />
<ds:SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256" />
<ds:Reference Id="Reference-Id-b98be57c-5527-4efa-a542-40f53149c850" URI="#Signed-Properties-Id-340da5eb-1c01-44ce-99dd-c8fd93ac8a4a" Type="http://uri.etsi.org/01903#SignedProperties">
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" />
<ds:DigestValue>nwEkIzck5o8HCkLVktCal0gcVHtbSp3CveUJPYXa7t4=</ds:DigestValue>
</ds:Reference>
<ds:Reference Id="Reference-Id-eb55c392-bc1d-4469-bbc8-af6b0f28f3a5" URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" />
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" />
<ds:DigestValue>sE5fcHTIdksKY28tz39+6XNANwqLJzP0yBZi13OESuo=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue Id="Signature-Value-Id-5cf6262f-4928-4a68-9914-9e696a383b03">CSmQmvZEt6Mml9i5+d1taRXX+i5ohpaXlmn+Rv5VRlFJX+iVQik5LOdbeffVpn3uU4mwdHrW4K9Rk9Ps3JnkAq0spk5iBmOSIrzQhY2UF6UlhufJ4Kq4iPhzTThzEGlkmZ4cGwzhQhNnY114MitQnDXBYML26Ak9CZSZf5yaMflBLgCH75v8f2g+y46e+I1hbj2zCZwdfxTiaHPAut5dfCe59AO4k2X0pQxWy9iXXItZdalG+TfFSANNKt5FwAtUFnmMcf8IcxR5bXKFCNkzVF4V5B130Yc7Nyid+PJwM/FSy2ZTACzFG73XnDWGlXPYaRvwX1nbV/wZIKxY+TxnLg==</ds:SignatureValue>
<ds:KeyInfo>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>2jWf7UXFwXgwJcVHQSkIHzwxzDEAZToDc5jSDMAo/bkvj5we2XRhJQ2LfU8MwT3dem+XXyzV5bqUmTQpYAuvjNkCBjOC+XG/Oo6GQhlz0U528eRkyXT8iPTdEg6ybB1aBEDGENbASPWaFSbaEn2DqpZZ8+sBQio8MWN1lMeiM0nkBI19s74ivd76mZRRhLDx2IYpHSdw4nkltWw6DJwuO3quJrs0L4zTCVb0k6i7tfm0mISdhTl8Q+DNxW2rSmzzNT2jTUy2KJGqwj4lbJWSyx23RQIzjvlb99IK0SFxYOn8Pvoe8GpTCGMcP0DIH3Uysi+LUxZ4Yb2cKVjXMkGbXQ==</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
<ds:X509Data>
<ds:X509Certificate>MIIFxTCCBK2gAwIBAgIIAMpyuyMQQPkwDQYJKoZIhvcNAQELBQAwXDELMAkGA1UEBhMCVFIxTTBLBgNVBAMMRE1hbGkgTcO8aMO8ciBFbGVrdHJvbmlrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxIC0gU8O8csO8bSAyMB4XDTIxMDMyMjEyNDcyOFoXDTI0MDMyMTEyNDcyOFowbDETMBEGA1UEBRMKMzIzMDUxMjM4NDFVMFMGA1UEAwxMRURNIELEsEzEsMWexLBNIFPEsFNURU1MRVLEsCBWRSBEQU5JxZ5NQU5MSUsgSMSwWk1FVExFUsSwIEFOT07EsE0gxZ7EsFJLRVTEsDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANo1n+1FxcF4MCXFR0EpCB88McwxAGU6A3OY0gzAKP25L4+cHtl0YSUNi31PDME93Xpvl18s1eW6lJk0KWALr4zZAgYzgvlxvzqOhkIZc9FOdvHkZMl0/Ij03RIOsmwdWgRAxhDWwEj1mhUm2hJ9g6qWWfPrAUIqPDFjdZTHojNJ5ASNfbO+Ir3e+pmUUYSw8diGKR0ncOJ5JbVsOgycLjt6ria7NC+M0wlW9JOou7X5tJiEnYU5fEPgzcVtq0ps8zU9o01MtiiRqsI+JWyVkssdt0UCM475W/fSCtEhcWDp/D76HvBqUwhjHD9AyB91MrIvi1MWeGG9nClY1zJBm10CAwEAAaOCAnkwggJ1MB8GA1UdIwQYMBaAFAOE+pcx5/SHGS9lK+G0G2Onr3W+MB0GA1UdDgQWBBQWg9vswimkooSvPnJWRw50r+q/PDAOBgNVHQ8BAf8EBAMCB4AwggEzBgNVHSAEggEqMIIBJjCCASIGC2CGGAECAQEFBwQBMIIBETAqBggrBgEFBQcCARYeaHR0cDovL2RlcG8ua2FtdXNtLmdvdi50ci9pbGtlMIHiBggrBgEFBQcCAjCB1R6B0gBCAHUAIABzAGUAcgB0AGkAZgBpAGsAYQAgAGkAbABlACAAaQBsAGcAaQBsAGkAIABzAGUAcgB0AGkAZgBpAGsAYQAgAHUAeQBnAHUAbABhAG0AYQAgAGUAcwBhAHMAbABhAHIBMQBuATEAIABvAGsAdQBtAGEAawAgAGkA5wBpAG4AIABiAGUAbABpAHIAdABpAGwAZQBuACAAdwBlAGIAIABzAGkAdABlAHMAaQBuAGkAIAB6AGkAeQBhAHIAZQB0ACAAZQBkAGkAbgBpAHoALjAMBgNVHRMBAf8EAjAAMBYGA1UdJQQPMA0GC2CGGAECAQEFBzIBMEEGA1UdHwQ6MDgwNqA0oDKGMGh0dHA6Ly9kZXBvLmthbXVzbS5nb3YudHIva3VydW1zYWwvbW1lc2hzLXMyLmNybDCBggYIKwYBBQUHAQEEdjB0MDwGCCsGAQUFBzAChjBodHRwOi8vZGVwby5rYW11c20uZ292LnRyL2t1cnVtc2FsL21tZXNocy1zMi5jcnQwNAYIKwYBBQUHMAGGKGh0dHA6Ly9jaXNkdXBtbXMyLmt1cnVtc2FsLmthbXVzbS5nb3YudHIwDQYJKoZIhvcNAQELBQADggEBALZA0yioQIvCknLN5XpN3m2bWSFajcYX9EE51xCkgX89zmgg+Tzz8ctgexO0ypoeaZ9dpgLVK7URoWf5E4jiPWZxXex9LGlgkNlcBIicbGJaqYR1Ef+WRv1zurlrISnqLRn5cz03D4OiI5phMtH9cQoPNBGHE7ig8RsOm1av912QCT6S/Z+Vwq5pj66xpNkiEw+lMdVgRAyNq1Enxmw4aNbniqigoeyEBbzAbUIRMAE8rKGEvH9+fcs54VoWthLkOvNtC2IWxVb9reLA4M5fA/RPjYqkAUY11IL9yU2aS+DKACawVpQd4gkKHBU+TgJGF5/fm5FiOm4n5iuyTQyQnsU=</ds:X509Certificate>
<ds:X509SubjectName>CN=EDM BİLİŞİM SİSTEMLERİ VE DANIŞMANLIK HİZMETLERİ ANONİM ŞİRKETİ,SERIALNUMBER=3230512384</ds:X509SubjectName>
</ds:X509Data>
</ds:KeyInfo>
<ds:Object Id="Object-Id-27ddc73a-2959-47de-a36c-a9b6fdd4faf4"><xades:QualifyingProperties xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" Target="#Signature-Id-81e618de-409d-4f75-9788-5768b389423c">
<xades:SignedProperties Id="Signed-Properties-Id-340da5eb-1c01-44ce-99dd-c8fd93ac8a4a">
<xades:SignedSignatureProperties>
<xades:SigningTime>2022-03-01T21:44:55.7942354+03:00</xades:SigningTime>
<xades:SigningCertificate>
<xades:Cert>
<xades:CertDigest>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" />
<ds:DigestValue>7SltKQ8DzK++5YThHVykhwtA8mN7rsZp8+bSU4baGHQ=</ds:DigestValue>
</xades:CertDigest>
<xades:IssuerSerial>
<ds:X509IssuerName>CN=Mali Mühür Elektronik Sertifika Hizmet Sağlayıcısı - Sürüm 2,C=TR</ds:X509IssuerName>
<ds:X509SerialNumber>56984093368271097</ds:X509SerialNumber>
</xades:IssuerSerial>
</xades:Cert>
</xades:SigningCertificate>
<xades:SignerRole>
<xades:ClaimedRoles>
<xades:ClaimedRole>Tedarikçi</xades:ClaimedRole>
</xades:ClaimedRoles>
</xades:SignerRole>
</xades:SignedSignatureProperties>
<xades:SignedDataObjectProperties>
<xades:DataObjectFormat ObjectReference="#Reference-Id-eb55c392-bc1d-4469-bbc8-af6b0f28f3a5">
<xades:MimeType>text/xml</xades:MimeType>
</xades:DataObjectFormat>
</xades:SignedDataObjectProperties>
</xades:SignedProperties>
</xades:QualifyingProperties>
</ds:Object>
</ds:Signature></ext:ExtensionContent></ext:UBLExtension></ext:UBLExtensions><cbc:UBLVersionID>2.1</cbc:UBLVersionID><cbc:CustomizationID>TR1.2</cbc:CustomizationID><cbc:ProfileID>TEMELFATURA</cbc:ProfileID><cbc:ID>IAD2022030121431</cbc:ID><cbc:CopyIndicator>false</cbc:CopyIndicator><cbc:UUID>8C2BEA7D-97C9-4FA8-8E3D-D85A2C9B7641</cbc:UUID><cbc:IssueDate>2022-03-01</cbc:IssueDate><cbc:InvoiceTypeCode>IADE</cbc:InvoiceTypeCode><cbc:Note>İade Faturasıdır.</cbc:Note><cbc:DocumentCurrencyCode>TRY</cbc:DocumentCurrencyCode><cbc:AccountingCost /><cbc:LineCountNumeric>1</cbc:LineCountNumeric><cac:AdditionalDocumentReference><cbc:ID>1</cbc:ID><cbc:IssueDate>2022-03-01</cbc:IssueDate><cac:Attachment><cbc:EmbeddedDocumentBinaryObject mimeCode="application/xml" encodingCode="Base64" characterSetCode="UTF-8" filename="IAD2022030121431.xslt"></cbc:EmbeddedDocumentBinaryObject><cac:ExternalReference><cbc:URI>#Xslt-Id-IAD2022030121431</cbc:URI></cac:ExternalReference></cac:Attachment></cac:AdditionalDocumentReference><cac:Signature><cbc:ID schemeID="VKN_TCKN">3230512384</cbc:ID><cac:SignatoryParty><cac:PartyIdentification><cbc:ID schemeID="VKN">3230512384</cbc:ID></cac:PartyIdentification><cac:PartyName><cbc:Name>EDM GB</cbc:Name></cac:PartyName><cac:PostalAddress><cbc:StreetName>Mecidiyeköy mah. mecidiye cad. cansızoğlu iş mrk. </cbc:StreetName><cbc:CitySubdivisionName>Şişli</cbc:CitySubdivisionName><cbc:CityName>İstanbul</cbc:CityName><cac:Country><cbc:Name>Türkiye</cbc:Name></cac:Country></cac:PostalAddress></cac:SignatoryParty><cac:DigitalSignatureAttachment><cac:ExternalReference><cbc:URI>#Signature_IAD2022030121431</cbc:URI></cac:ExternalReference></cac:DigitalSignatureAttachment></cac:Signature><cac:AccountingSupplierParty><cac:Party><cbc:WebsiteURI>www.doreajans.com</cbc:WebsiteURI><cac:PartyIdentification><cbc:ID schemeID="VKN">3230512384</cbc:ID></cac:PartyIdentification><cac:PartyName><cbc:Name>Dore Prodüksiyon Ajans Reklam Yazılım Sn.ve Tic.Ltd.Şti.</cbc:Name></cac:PartyName><cac:PostalAddress><cbc:StreetName>Tayakadın Mh. Gazcılar Cd. No:5 Osmangazi / BURSA</cbc:StreetName><cbc:BuildingName /><cbc:CitySubdivisionName /><cbc:CityName /><cac:Country><cbc:Name>Türkiye</cbc:Name></cac:Country></cac:PostalAddress><cac:PartyTaxScheme><cac:TaxScheme><cbc:Name>Yesil</cbc:Name></cac:TaxScheme></cac:PartyTaxScheme><cac:Contact><cbc:Telephone>02249999999</cbc:Telephone><cbc:Telefax>02249999999</cbc:Telefax><cbc:ElectronicMail>yavuz@doreajans.com</cbc:ElectronicMail></cac:Contact></cac:Party></cac:AccountingSupplierParty><cac:AccountingCustomerParty><cac:Party><cac:PartyIdentification><cbc:ID schemeID="VKN">3230512384</cbc:ID></cac:PartyIdentification><cac:PartyName><cbc:Name>EDM BİLİŞİM SİSTEMLERİ VE DANIŞMANLIK HİZMETLERİ ANONİM ŞİRKETİ Test Kullanıcı</cbc:Name></cac:PartyName><cac:PostalAddress><cbc:BuildingName /><cbc:CitySubdivisionName /><cbc:CityName /><cac:Country><cbc:Name>Türkiye</cbc:Name></cac:Country></cac:PostalAddress><cac:Contact /></cac:Party></cac:AccountingCustomerParty><cac:TaxTotal><cbc:TaxAmount currencyID="TRY">0</cbc:TaxAmount><cac:TaxSubtotal><cbc:TaxableAmount currencyID="TRY">100</cbc:TaxableAmount><cbc:TaxAmount currencyID="TRY">18</cbc:TaxAmount><cbc:Percent>18</cbc:Percent><cac:TaxCategory><cac:TaxScheme><cbc:Name>KDV GERCEK</cbc:Name><cbc:TaxTypeCode>0015</cbc:TaxTypeCode></cac:TaxScheme></cac:TaxCategory></cac:TaxSubtotal></cac:TaxTotal><cac:LegalMonetaryTotal><cbc:LineExtensionAmount currencyID="TRY">100</cbc:LineExtensionAmount><cbc:TaxExclusiveAmount currencyID="TRY">100</cbc:TaxExclusiveAmount><cbc:TaxInclusiveAmount currencyID="TRY">118</cbc:TaxInclusiveAmount><cbc:AllowanceTotalAmount currencyID="TRY">0</cbc:AllowanceTotalAmount><cbc:PayableAmount currencyID="TRY">118</cbc:PayableAmount></cac:LegalMonetaryTotal><cac:InvoiceLine><cbc:ID>1</cbc:ID><cbc:InvoicedQuantity unitCode="C62">1</cbc:InvoicedQuantity><cbc:LineExtensionAmount currencyID="TRY">100</cbc:LineExtensionAmount><cac:TaxTotal><cbc:TaxAmount currencyID="TRY">18</cbc:TaxAmount><cac:TaxSubtotal><cbc:TaxableAmount currencyID="TRY">100</cbc:TaxableAmount><cbc:TaxAmount currencyID="TRY">18</cbc:TaxAmount><cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric><cbc:Percent>18</cbc:Percent><cac:TaxCategory><cac:TaxScheme><cbc:Name>KDV GERCEK</cbc:Name><cbc:TaxTypeCode>0015</cbc:TaxTypeCode></cac:TaxScheme></cac:TaxCategory></cac:TaxSubtotal></cac:TaxTotal><cac:Item><cbc:Description>Web Tasarım</cbc:Description><cbc:Name>Web Tasarım</cbc:Name></cac:Item><cac:Price><cbc:PriceAmount currencyID="TRY">100</cbc:PriceAmount></cac:Price></cac:InvoiceLine></Invoice>